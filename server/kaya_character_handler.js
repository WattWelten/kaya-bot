const ContextMemory = require('./context_memory');
const AdvancedPersonaDetection = require('./advanced_persona_detection');

class KAYACharacterHandler {
    constructor() {
        this.agentHandler = null; // Lazy loading f√ºr Agent Handler
        this.llmService = null; // Lazy loading
        this.useLLM = process.env.USE_LLM === 'true';
        this.contextMemory = new ContextMemory();
        this.personaDetection = new AdvancedPersonaDetection();
    }
    
    // Lazy loading f√ºr Agent Handler
    getAgentHandler() {
        if (!this.agentHandler) {
            const KAYAAgentHandler = require('./kaya_agent_handler');
        this.agentHandler = new KAYAAgentHandler();
        }
        return this.agentHandler;
    }
    
    // Lazy loading f√ºr LLM Service
    getLLMService() {
        if (!this.llmService) {
            const LLMService = require('./llm_service');
            this.llmService = new LLMService();
        }
        return this.llmService;
    }
    
    async generateResponse(query, userMessage, sessionId = 'default') {
        // Context-Memory: Nachricht zur Session hinzuf√ºgen
        this.contextMemory.addMessage(sessionId, query, 'user');
        
        // Persona-Analyse durchf√ºhren
        const session = this.contextMemory.getSession(sessionId);
        const personaAnalysis = this.personaDetection.analyzePersona(session.messages, session.context);
        
        console.log(`üß† Persona-Analyse: ${personaAnalysis.persona.persona} (${personaAnalysis.emotionalState.state}, ${personaAnalysis.urgency.level})`);
        
        // Bestimme zust√§ndigen Agent mit Session-Kontext
        const sessionContext = {
            previousIntention: session.messages.length > 1 ? 
                session.messages[session.messages.length - 2].context?.intention : null,
            conversationHistory: session.messages.slice(-3) // Letzte 3 Nachrichten
        };
        
        // DEBUG: Session-Kontext ausgeben
        console.log(`üîç Session-Kontext Debug:`);
        console.log(`  - Session-ID: ${sessionId}`);
        console.log(`  - Messages: ${session.messages.length}`);
        console.log(`  - Previous Intention: ${sessionContext.previousIntention?.type || 'KEINE'}`);
        console.log(`  - Query: ${query}`);
        
        const agent = this.getAgentHandler().routeToAgent(query, sessionContext);
        
        let response;
        if (agent === 'kaya') {
            response = this.generateKAYAResponse(query, personaAnalysis, sessionContext);
        } else {
            response = this.generateAgentResponse(agent, query, personaAnalysis);
        }

        // Context-Memory: KAYA-Antwort hinzuf√ºgen mit Intention
        const intention = this.analyzeCitizenIntention(query, sessionContext);
        this.contextMemory.addMessage(sessionId, response.response, 'kaya', {
            agent: agent,
            persona: personaAnalysis.persona.persona,
            emotionalState: personaAnalysis.emotionalState.state,
            urgency: intention.urgency,
            intention: intention // Speichere die Intention f√ºr Kontext
        });

        // LLM-Enhancement DEAKTIVIERT f√ºr b√ºrgern√§here Antworten
        // B√ºrger wollen direkte L√∂sungen, nicht lange Erkl√§rungen!
        console.log('üéØ LLM-Enhancement deaktiviert - B√ºrgerzentrierte direkte Antworten');

        return response;
    }
    
    generateKAYAResponse(query, personaAnalysis = null, sessionContext = null) {
        // B√ºrgerzentrierte Dialog-Optimierung mit Kontext
        const intention = this.analyzeCitizenIntention(query, sessionContext);
        const response = this.generateDirectResponse(query, intention, personaAnalysis);
        
        return {
            agent: 'kaya',
            response: response.response,
            links: response.links,
            confidence: 0.9,
            source: 'kaya',
            enhanced: false,
            context: {
                persona: personaAnalysis?.persona?.persona || 'standard_citizen',
                emotionalState: personaAnalysis?.emotionalState?.state || 'neutral',
                urgency: intention.urgency
            }
        };
    }

    /**
     * UNIVERSALE B√ºrgerzentrierte Intention-Analyse
     * Funktioniert f√ºr ALLE B√ºrger und ALLE Anliegen
     */
    analyzeCitizenIntention(query, sessionContext = null) {
        const lowerQuery = query.toLowerCase();
        
        // 1. URGENCY-Analyse (f√ºr alle B√ºrger)
        const urgency = this.analyzeUrgency(lowerQuery);
        
        // 2. EMOTIONAL STATE (f√ºr alle B√ºrger)
        const emotionalState = this.analyzeEmotionalState(lowerQuery);
        
        // 3. ACCESSIBILITY NEEDS (inklusiv f√ºr alle B√ºrger)
        const accessibilityNeeds = this.analyzeAccessibilityNeeds(lowerQuery);
        
        // 4. LOCATION (f√ºr alle B√ºrger)
        const location = this.extractLocation(query);
        
        // 5. SPECIFIC INTENTION (erweitert f√ºr alle Anliegen mit Kontext)
        const specificIntention = this.analyzeSpecificIntention(lowerQuery, sessionContext);
        
        return {
            type: specificIntention.type,
            urgency: urgency,
            emotionalState: emotionalState,
            accessibilityNeeds: accessibilityNeeds,
            location: location,
            needs: specificIntention.needs,
            specific: specificIntention.specific,
            citizenType: this.analyzeCitizenType(lowerQuery),
            language: this.analyzeLanguage(query),
            query: query // Speichere die urspr√ºngliche Query f√ºr konkrete Fragen
        };
    }

    /**
     * Analysiert Dringlichkeit f√ºr alle B√ºrger
     */
    analyzeUrgency(query) {
        const urgentKeywords = ['eilig', 'dringend', 'sofort', 'heute', 'morgen', 'schnell', 'notfall'];
        const veryUrgentKeywords = ['notfall', 'kritisch', 'lebensgefahr', 'sofort'];
        
        if (veryUrgentKeywords.some(keyword => query.includes(keyword))) {
            return 'critical';
        }
        if (urgentKeywords.some(keyword => query.includes(keyword))) {
            return 'high';
        }
        return 'normal';
    }

    /**
     * Analysiert emotionalen Zustand f√ºr alle B√ºrger
     */
    analyzeEmotionalState(query) {
        const frustratedKeywords = ['frustriert', '√§rgerlich', 'verwirrt', 'hilflos', 'verzweifelt'];
        const anxiousKeywords = ['sorge', 'angst', 'unsicher', 'nerv√∂s'];
        const positiveKeywords = ['freundlich', 'danke', 'hilfreich', 'gut'];
        
        if (frustratedKeywords.some(keyword => query.includes(keyword))) {
            return 'frustrated';
        }
        if (anxiousKeywords.some(keyword => query.includes(keyword))) {
            return 'anxious';
        }
        if (positiveKeywords.some(keyword => query.includes(keyword))) {
            return 'positive';
        }
        return 'neutral';
    }

    /**
     * Analysiert Barrierefreiheits-Bed√ºrfnisse (inklusiv)
     */
    analyzeAccessibilityNeeds(query) {
        const needs = [];
        
        if (query.includes('blind') || query.includes('sehbehindert')) {
            needs.push('visual');
        }
        if (query.includes('taub') || query.includes('h√∂rbehindert')) {
            needs.push('hearing');
        }
        if (query.includes('rollstuhl') || query.includes('behindert')) {
            needs.push('mobility');
        }
        if (query.includes('einfach') || query.includes('leicht')) {
            needs.push('simple_language');
        }
        
        return needs;
    }

    /**
     * Analysiert B√ºrger-Typ (inklusiv f√ºr alle)
     */
    analyzeCitizenType(query) {
        const lowerQuery = query.toLowerCase();
        
        // Erweiterte Landkreis-spezifische Erkennung
        if (lowerQuery.includes('landwirt') || lowerQuery.includes('bauer') || lowerQuery.includes('hof') || 
            lowerQuery.includes('kuh') || lowerQuery.includes('schwein') || lowerQuery.includes('eu-antrag')) {
            return 'farmer';
        }
        if (lowerQuery.includes('handwerker') || lowerQuery.includes('meister') || lowerQuery.includes('kammer') || 
            lowerQuery.includes('ausbildung') || lowerQuery.includes('lehre')) {
            return 'craftsman';
        }
        if (lowerQuery.includes('student') || lowerQuery.includes('studium') || lowerQuery.includes('baf√∂g') || 
            lowerQuery.includes('wohnheim') || lowerQuery.includes('semester')) {
            return 'student';
        }
        if (lowerQuery.includes('arbeitssuchend') || lowerQuery.includes('alg') || lowerQuery.includes('jobcenter') || 
            lowerQuery.includes('weiterbildung') || lowerQuery.includes('arbeitslos')) {
            return 'unemployed';
        }
        if (lowerQuery.includes('senior') || lowerQuery.includes('rentner') || lowerQuery.includes('alt') || 
            lowerQuery.includes('pension') || lowerQuery.includes('ruhestand')) {
            return 'senior';
        }
        if (lowerQuery.includes('jugend') || lowerQuery.includes('sch√ºler') || lowerQuery.includes('ausbildung')) {
            return 'youth';
        }
        if (lowerQuery.includes('familie') || lowerQuery.includes('kind') || lowerQuery.includes('baby') || 
            lowerQuery.includes('alleinerziehend') || lowerQuery.includes('unterhalt')) {
            return 'family';
        }
        if (lowerQuery.includes('gefl√ºchtet') || lowerQuery.includes('migrant') || lowerQuery.includes('ausl√§nder') || 
            lowerQuery.includes('asyl') || lowerQuery.includes('integration') || lowerQuery.includes('sprachkurs')) {
            return 'migrant';
        }
        if (lowerQuery.includes('behindert') || lowerQuery.includes('beeintr√§chtigt') || lowerQuery.includes('schwerbehindertenausweis') || 
            lowerQuery.includes('eingliederungshilfe')) {
            return 'disabled';
        }
        if (lowerQuery.includes('eu') || lowerQuery.includes('aufenthaltsrecht') || lowerQuery.includes('freiz√ºgigkeit')) {
            return 'eu_citizen';
        }
        if (lowerQuery.includes('kleinunternehmer') || lowerQuery.includes('steuern') || lowerQuery.includes('buchhaltung') || 
            lowerQuery.includes('gewerbesteuer')) {
            return 'small_business';
        }
        return 'general';
    }

    /**
     * Analysiert Sprache (inklusiv) mit erweiterter Erkennung f√ºr Landkreis Oldenburg
     */
    analyzeLanguage(query) {
        const lowerQuery = query.toLowerCase();
        
        // Erweiterte Sprach-Erkennung basierend auf Bev√∂lkerungsstruktur Landkreis Oldenburg
        const englishWords = ['hello', 'help', 'please', 'thank you', 'sorry', 'excuse me', 'i need', 'can you'];
        const turkishWords = ['merhaba', 'yardƒ±m', 'l√ºtfen', 'te≈üekk√ºr', '√∂z√ºr', 'yardƒ±m edin', 'nasƒ±l', 'ne'];
        const arabicWords = ['ŸÖÿ±ÿ≠ÿ®ÿß', 'ŸÖÿ≥ÿßÿπÿØÿ©', 'ŸÖŸÜ ŸÅÿ∂ŸÑŸÉ', 'ÿ¥ŸÉÿ±ÿß', 'ÿ£ÿ≠ÿ™ÿßÿ¨', 'ŸÉŸäŸÅ'];
        const polishWords = ['dzie≈Ñ dobry', 'pomoc', 'proszƒô', 'dziƒôkujƒô', 'potrzebujƒô', 'jak'];
        const russianWords = ['–ø—Ä–∏–≤–µ—Ç', '–ø–æ–º–æ—â—å', '–ø–æ–∂–∞–ª—É–π—Å—Ç–∞', '—Å–ø–∞—Å–∏–±–æ', '–Ω—É–∂–µ–Ω', '–∫–∞–∫'];
        const romanianWords = ['bunƒÉ', 'ajutor', 'vƒÉ rog', 'mul»õumesc', 'am nevoie', 'cum'];
        const ukrainianWords = ['–ø—Ä–∏–≤—ñ—Ç', '–¥–æ–ø–æ–º–æ–≥–∞', '–±—É–¥—å –ª–∞—Å–∫–∞', '–¥—è–∫—É—é', '–ø–æ—Ç—Ä—ñ–±–Ω–æ', '—è–∫'];
        const dutchWords = ['hallo', 'hulp', 'alsjeblieft', 'dank je', 'ik heb nodig', 'hoe'];
        const danishWords = ['hej', 'hj√¶lp', 'tak', 'undskyld', 'jeg har brug for', 'hvordan'];
        const plattdeutschWords = ['moin', 'h√ºlp', 'bitte', 'danke', 'ik bruuk', 'wo'];
        
        if (englishWords.some(word => lowerQuery.includes(word))) {
            return 'english';
        }
        if (turkishWords.some(word => lowerQuery.includes(word))) {
            return 'turkish';
        }
        if (arabicWords.some(word => lowerQuery.includes(word))) {
            return 'arabic';
        }
        if (polishWords.some(word => lowerQuery.includes(word))) {
            return 'polish';
        }
        if (russianWords.some(word => lowerQuery.includes(word))) {
            return 'russian';
        }
        if (romanianWords.some(word => lowerQuery.includes(word))) {
            return 'romanian';
        }
        if (ukrainianWords.some(word => lowerQuery.includes(word))) {
            return 'ukrainian';
        }
        if (dutchWords.some(word => lowerQuery.includes(word))) {
            return 'dutch';
        }
        if (danishWords.some(word => lowerQuery.includes(word))) {
            return 'danish';
        }
        if (plattdeutschWords.some(word => lowerQuery.includes(word))) {
            return 'plattdeutsch';
        }
        return 'german';
    }

    /**
     * Analysiert Tipp-Verhalten f√ºr Persona-Erkennung
     */
    analyzeTypingBehavior(query, sessionContext = null) {
        const behavior = {
            typingSpeed: this.estimateTypingSpeed(query),
            languageLevel: this.analyzeLanguageLevel(query),
            formality: this.analyzeFormality(query),
            urgency: this.analyzeUrgencyFromTyping(query)
        };
        
        return behavior;
    }

    /**
     * Sch√§tzt Tipp-Geschwindigkeit basierend auf Query-L√§nge und Zeit
     */
    estimateTypingSpeed(query) {
        // Vereinfachte Sch√§tzung basierend auf Query-Charakteristika
        if (query.length < 10) return 'fast'; // Kurze, direkte Anfragen
        if (query.length > 100) return 'slow'; // Lange, detaillierte Anfragen
        return 'normal';
    }

    /**
     * Analysiert Sprach-Niveau
     */
    analyzeLanguageLevel(query) {
        const lowerQuery = query.toLowerCase();
        
        // Einfache Sprache
        if (lowerQuery.includes('hilfe') || lowerQuery.includes('brauche') || lowerQuery.includes('kann nicht')) {
            return 'simple';
        }
        
        // Komplexe Sprache
        if (lowerQuery.includes('beantragen') || lowerQuery.includes('erforderlich') || lowerQuery.includes('voraussetzung')) {
            return 'complex';
        }
        
        return 'normal';
    }

    /**
     * Analysiert Formellit√§t
     */
    analyzeFormality(query) {
        const lowerQuery = query.toLowerCase();
        
        // Formell
        if (lowerQuery.includes('sie') || lowerQuery.includes('ihr') || lowerQuery.includes('bitte')) {
            return 'formal';
        }
        
        // Informell
        if (lowerQuery.includes('du') || lowerQuery.includes('dein') || lowerQuery.includes('hey')) {
            return 'informal';
        }
        
        return 'neutral';
    }

    /**
     * Analysiert spezifische Intention (erweitert f√ºr alle Anliegen)
     */
    analyzeSpecificIntention(query, sessionContext = null) {
        // Erweiterte Kategorien f√ºr alle B√ºrgeranliegen - Landkreis-spezifisch
        const intentions = [
            // Verwaltung
            { keywords: ['bauantrag', 'bauen', 'haus', 'geb√§ude'], type: 'bauantrag', needs: ['formulare', 'unterlagen', 'termin', 'kosten'] },
            { keywords: ['auto', 'fahrzeug', 'zulassen', 'kfz', 'kennzeichen', 'zulassungsbescheinigung', 'evb', 'versicherung', 'fahrzeugbrief', 'fahrzeugschein'], type: 'kfz_zulassung', needs: ['termin', 'formulare', 'unterlagen', 'kosten'] },
            { keywords: ['f√ºhrerschein', 'fahrerlaubnis'], type: 'f√ºhrerschein', needs: ['termin', 'formulare', 'unterlagen', 'kosten'] },
            { keywords: ['gewerbe', 'gewerbeanmeldung', 'selbst√§ndig'], type: 'gewerbe', needs: ['formulare', 'unterlagen', 'beratung'] },
            
            // Landwirtschaft
            { keywords: ['landwirt', 'bauer', 'hof', 'kuh', 'schwein', 'eu-antrag'], type: 'landwirtschaft', needs: ['eu-antr√§ge', 'tierhaltung', 'agrarberatung'] },
            { keywords: ['tierhaltung', 'stall', 'weide', 'futter'], type: 'tierhaltung', needs: ['genehmigung', 'tierschutz', 'veterin√§r'] },
            
            // Handwerk
            { keywords: ['handwerker', 'meister', 'kammer', 'ausbildung'], type: 'handwerk', needs: ['meisterpr√ºfung', 'handwerkskammer', 'ausbildung'] },
            { keywords: ['lehre', 'ausbildung', 'geselle'], type: 'ausbildung', needs: ['ausbildungsplatz', 'berufsschule', 'pr√ºfung'] },
            
            // Studium
            { keywords: ['studium', 'universit√§t', 'hochschule', 'baf√∂g'], type: 'studium', needs: ['baf√∂g-antrag', 'wohnheim', 'semesterticket'] },
            { keywords: ['baf√∂g', 'studentenwerk', 'wohnheim'], type: 'baf√∂g', needs: ['antrag', 'unterlagen', 'beratung'] },
            
            // Arbeitslosigkeit
            { keywords: ['arbeitssuchend', 'alg', 'jobcenter', 'weiterbildung'], type: 'arbeitslosigkeit', needs: ['alg-antrag', 'jobcenter', 'weiterbildung'] },
            { keywords: ['arbeitslos', 'arbeitsamt', 'bewerbung'], type: 'arbeitslosigkeit', needs: ['alg-antrag', 'jobcenter', 'weiterbildung'] },
            
            // Rente
            { keywords: ['rente', 'pension', 'ruhestand'], type: 'rente', needs: ['rentenantrag', 'pension', 'seniorenservices'] },
            { keywords: ['senioren', '√§lter', 'ruhestand'], type: 'senioren', needs: ['seniorenservices', 'pflege', 'betreuung'] },
            
            // Alleinerziehende
            { keywords: ['alleinerziehend', 'unterhalt', 'kindergeld'], type: 'alleinerziehende', needs: ['kindergeld-antrag', 'unterhaltsvorschuss', 'betreuung'] },
            { keywords: ['unterhaltsvorschuss', 'alleinerziehend'], type: 'unterhalt', needs: ['antrag', 'unterlagen', 'beratung'] },
            
            // Behinderung
            { keywords: ['behindert', 'schwerbehindertenausweis', 'eingliederungshilfe'], type: 'behinderung', needs: ['schwerbehindertenausweis', 'eingliederungshilfe', 'barrierefreiheit'] },
            { keywords: ['beeintr√§chtigt', 'behinderung', 'inklusion'], type: 'behinderung', needs: ['schwerbehindertenausweis', 'eingliederungshilfe', 'barrierefreiheit'] },
            
            // Migration
            { keywords: ['gefl√ºchtet', 'asyl', 'integration', 'sprachkurs'], type: 'migration', needs: ['asylverfahren', 'sprachkurs', 'integration'] },
            { keywords: ['migrant', 'ausl√§nder', 'aufenthaltsrecht'], type: 'aufenthaltsrecht', needs: ['aufenthaltsrecht', 'arbeitserlaubnis', 'familiennachzug'] },
            
            // EU-B√ºrger
            { keywords: ['eu', 'freiz√ºgigkeit', 'aufenthaltsrecht'], type: 'eu_b√ºrger', needs: ['aufenthaltsrecht', 'arbeitserlaubnis', 'familiennachzug'] },
            
            // Kleinunternehmer
            { keywords: ['kleinunternehmer', 'steuern', 'buchhaltung'], type: 'kleinunternehmer', needs: ['kleinunternehmerregelung', 'gewerbesteuer', 'buchhaltung'] },
            { keywords: ['gewerbesteuer', 'steuerberater', 'buchhaltung'], type: 'steuern', needs: ['steuerberatung', 'buchhaltung', 'gewerbesteuer'] },
            
            // Soziales
            { keywords: ['kindergeld', 'elterngeld', 'sozialhilfe'], type: 'soziales', needs: ['formulare', 'beratung', 'unterlagen'] },
            { keywords: ['wohngeld', 'miete', 'wohnung'], type: 'wohngeld', needs: ['formulare', 'beratung', 'unterlagen'] },
            { keywords: ['pflege', 'pflegegeld', 'pflegeheim'], type: 'pflege', needs: ['beratung', 'formulare', 'unterlagen'] },
            
            // Gesundheit
            { keywords: ['gesundheit', 'arzt', 'krankenhaus'], type: 'gesundheit', needs: ['kontakt', 'informationen', 'termin'] },
            { keywords: ['impfung', 'impfpass'], type: 'impfung', needs: ['termin', 'informationen', 'formulare'] },
            
            // Bildung
            { keywords: ['schule', 'kindergarten', 'bildung'], type: 'bildung', needs: ['anmeldung', 'informationen', 'kontakt'] },
            
            // Umwelt
            { keywords: ['m√ºll', 'abfall', 'entsorgung'], type: 'umwelt', needs: ['informationen', 'termin', 'kosten'] },
            { keywords: ['wasser', 'kanalisation'], type: 'wasser', needs: ['informationen', 'kontakt', 'kosten'] },
            
            // Allgemeine Verwaltung
            { keywords: ['formular', 'antrag', 'beantragen'], type: 'formular', needs: ['download', 'ausf√ºllen', 'einreichen'] },
            { keywords: ['termin', 'vereinbaren', 'wann'], type: 'termin', needs: ['online_termin', '√∂ffnungszeiten', 'verf√ºgbarkeit'] },
            { keywords: ['kontakt', 'telefon', 'anrufen'], type: 'kontakt', needs: ['telefonnummer', 'email', 'adresse', '√∂ffnungszeiten'] },
            { keywords: ['√∂ffnungszeiten', 'wann', 'ge√∂ffnet'], type: '√∂ffnungszeiten', needs: ['zeiten', 'kontakt', 'adresse'] },
            
            // Notf√§lle
            { keywords: ['notfall', 'hilfe', 'krisen'], type: 'notfall', needs: ['sofortige_hilfe', 'kontakt', 'informationen'] }
        ];
        
        // KONTEXT-BASIERTE INTENTION-ERKENNUNG F√úR ALLE BEREICHE
        if (sessionContext && sessionContext.previousIntention) {
            const previousType = sessionContext.previousIntention.type;
            
            // KFZ-Follow-up Erkennung
            if (previousType === 'kfz_zulassung') {
                const kfzFollowUpKeywords = ['zulassungsbescheinigung', 'evb', 'versicherung', 'fahrzeugbrief', 'fahrzeugschein', 'unterlagen', 'dokumente', 'papiere', 'kennzeichen', 'nummernschild'];
                if (kfzFollowUpKeywords.some(keyword => query.includes(keyword))) {
                    return {
                        type: 'kfz_zulassung',
                        needs: ['termin', 'formulare', 'unterlagen', 'kosten'],
                        specific: 'follow_up'
                    };
                }
            }
            
            // Bauantrag-Follow-up Erkennung
            if (previousType === 'bauantrag') {
                const bauFollowUpKeywords = ['unterlagen', 'dokumente', 'papiere', 'grundst√ºck', 'bauplan', 'genehmigung', 'grundriss', 'statik', 'architekt', 'bauherr'];
                if (bauFollowUpKeywords.some(keyword => query.includes(keyword))) {
                    return {
                        type: 'bauantrag',
                        needs: ['formulare', 'unterlagen', 'termin', 'kosten'],
                        specific: 'follow_up'
                    };
                }
            }
            
            // F√ºhrerschein-Follow-up Erkennung
            if (previousType === 'f√ºhrerschein') {
                const fsFollowUpKeywords = ['unterlagen', 'dokumente', 'papiere', 'pr√ºfung', 'theorie', 'praxis', 'fahrschule', 'sehtest', 'erstehilfe', 'f√ºhrerscheinantrag'];
                if (fsFollowUpKeywords.some(keyword => query.includes(keyword))) {
                    return {
                        type: 'f√ºhrerschein',
                        needs: ['termin', 'formulare', 'unterlagen', 'kosten'],
                        specific: 'follow_up'
                    };
                }
            }
            
            // Gewerbe-Follow-up Erkennung
            if (previousType === 'gewerbe') {
                const gewerbeFollowUpKeywords = ['unterlagen', 'dokumente', 'papiere', 'gewerbeschein', 'handelsregister', 'steuernummer', 'finanzamt', 'ihk'];
                if (gewerbeFollowUpKeywords.some(keyword => query.includes(keyword))) {
                    return {
                        type: 'gewerbe',
                        needs: ['formulare', 'unterlagen', 'beratung'],
                        specific: 'follow_up'
                    };
                }
            }
            
            // Landwirtschaft-Follow-up Erkennung
            if (previousType === 'landwirtschaft') {
                const landwirtschaftFollowUpKeywords = ['unterlagen', 'dokumente', 'papiere', 'eu-antrag', 'agrarantrag', 'fl√§chennachweis', 'tierbestand', 'hofbescheinigung', 'flaeche', 'hektar', 'acker', 'wiese', 'weide'];
                if (landwirtschaftFollowUpKeywords.some(keyword => query.includes(keyword))) {
                    return {
                        type: 'landwirtschaft',
                        needs: ['eu-antr√§ge', 'tierhaltung', 'agrarberatung'],
                        specific: 'follow_up'
                    };
                }
            }
            
            // Handwerk-Follow-up Erkennung
            if (previousType === 'handwerk') {
                const handwerkFollowUpKeywords = ['unterlagen', 'dokumente', 'papiere', 'meisterpr√ºfung', 'gesellenpr√ºfung', 'handwerkskammer', 'ausbildungsnachweis', 'berufserfahrung'];
                if (handwerkFollowUpKeywords.some(keyword => query.includes(keyword))) {
                    return {
                        type: 'handwerk',
                        needs: ['meisterpr√ºfung', 'handwerkskammer', 'ausbildung'],
                        specific: 'follow_up'
                    };
                }
            }
            
            // Studium-Follow-up Erkennung
            if (previousType === 'studium') {
                const studiumFollowUpKeywords = ['unterlagen', 'dokumente', 'papiere', 'baf√∂g', 'studienbescheinigung', 'immatrikulation', 'semesterticket', 'wohnheim'];
                if (studiumFollowUpKeywords.some(keyword => query.includes(keyword))) {
                    return {
                        type: 'studium',
                        needs: ['baf√∂g-antrag', 'wohnheim', 'semesterticket'],
                        specific: 'follow_up'
                    };
                }
            }
            
            // BAf√∂G-Follow-up Erkennung
            if (previousType === 'baf√∂g') {
                const baf√∂gFollowUpKeywords = ['unterlagen', 'dokumente', 'papiere', 'einkommen', 'eltern', 'studienbescheinigung', 'bankauszug', 'miete'];
                if (baf√∂gFollowUpKeywords.some(keyword => query.includes(keyword))) {
                    return {
                        type: 'baf√∂g',
                        needs: ['antrag', 'unterlagen', 'beratung'],
                        specific: 'follow_up'
                    };
                }
            }
            
            // Arbeitslosigkeit-Follow-up Erkennung
            if (previousType === 'arbeitslosigkeit') {
                const arbeitslosigkeitFollowUpKeywords = ['unterlagen', 'dokumente', 'papiere', 'alg', 'arbeitslosengeld', 'bewerbung', 'jobcenter', 'arbeitsamt'];
                if (arbeitslosigkeitFollowUpKeywords.some(keyword => query.includes(keyword))) {
                    return {
                        type: 'arbeitslosigkeit',
                        needs: ['alg-antrag', 'jobcenter', 'weiterbildung'],
                        specific: 'follow_up'
                    };
                }
            }
            
            // Rente-Follow-up Erkennung
            if (previousType === 'rente') {
                const renteFollowUpKeywords = ['unterlagen', 'dokumente', 'papiere', 'rentenantrag', 'versicherungsverlauf', 'arbeitszeugnis', 'pension'];
                if (renteFollowUpKeywords.some(keyword => query.includes(keyword))) {
                    return {
                        type: 'rente',
                        needs: ['rentenantrag', 'pension', 'seniorenservices'],
                        specific: 'follow_up'
                    };
                }
            }
            
            // Senioren-Follow-up Erkennung
            if (previousType === 'senioren') {
                const seniorenFollowUpKeywords = ['unterlagen', 'dokumente', 'papiere', 'pflege', 'betreuung', 'seniorenheim', 'ambulante', 'station√§re'];
                if (seniorenFollowUpKeywords.some(keyword => query.includes(keyword))) {
                    return {
                        type: 'senioren',
                        needs: ['seniorenservices', 'pflege', 'betreuung'],
                        specific: 'follow_up'
                    };
                }
            }
            
            // Alleinerziehende-Follow-up Erkennung
            if (previousType === 'alleinerziehende') {
                const alleinerziehendeFollowUpKeywords = ['unterlagen', 'dokumente', 'papiere', 'kindergeld', 'unterhalt', 'vater', 'mutter', 'sorge'];
                if (alleinerziehendeFollowUpKeywords.some(keyword => query.includes(keyword))) {
                    return {
                        type: 'alleinerziehende',
                        needs: ['kindergeld-antrag', 'unterhaltsvorschuss', 'betreuung'],
                        specific: 'follow_up'
                    };
                }
            }
            
            // Behinderung-Follow-up Erkennung
            if (previousType === 'behinderung') {
                const behinderungFollowUpKeywords = ['unterlagen', 'dokumente', 'papiere', 'schwerbehindertenausweis', 'eingliederungshilfe', 'barrierefreiheit', 'hilfsmittel'];
                if (behinderungFollowUpKeywords.some(keyword => query.includes(keyword))) {
                    return {
                        type: 'behinderung',
                        needs: ['schwerbehindertenausweis', 'eingliederungshilfe', 'barrierefreiheit'],
                        specific: 'follow_up'
                    };
                }
            }
            
            // Migration-Follow-up Erkennung
            if (previousType === 'migration') {
                const migrationFollowUpKeywords = ['unterlagen', 'dokumente', 'papiere', 'asyl', 'aufenthalt', 'sprachkurs', 'integration', 'pass'];
                if (migrationFollowUpKeywords.some(keyword => query.includes(keyword))) {
                    return {
                        type: 'migration',
                        needs: ['asylverfahren', 'sprachkurs', 'integration'],
                        specific: 'follow_up'
                    };
                }
            }
            
            // Kleinunternehmer-Follow-up Erkennung
            if (previousType === 'kleinunternehmer') {
                const kleinunternehmerFollowUpKeywords = ['unterlagen', 'dokumente', 'papiere', 'steuern', 'gewerbesteuer', 'umsatzsteuer', 'buchhaltung', 'finanzamt'];
                if (kleinunternehmerFollowUpKeywords.some(keyword => query.includes(keyword))) {
                    return {
                        type: 'kleinunternehmer',
                        needs: ['kleinunternehmerregelung', 'gewerbesteuer', 'buchhaltung'],
                        specific: 'follow_up'
                    };
                }
            }
            
            // Soziales-Follow-up Erkennung
            if (previousType === 'soziales') {
                const sozialesFollowUpKeywords = ['unterlagen', 'dokumente', 'papiere', 'kindergeld', 'elterngeld', 'sozialhilfe', 'grundsicherung'];
                if (sozialesFollowUpKeywords.some(keyword => query.includes(keyword))) {
                    return {
                        type: 'soziales',
                        needs: ['formulare', 'beratung', 'unterlagen'],
                        specific: 'follow_up'
                    };
                }
            }
            
            // Gesundheit-Follow-up Erkennung
            if (previousType === 'gesundheit') {
                const gesundheitFollowUpKeywords = ['unterlagen', 'dokumente', 'papiere', 'arzt', 'krankenhaus', 'behandlung', 'rezept', 'krankenkasse'];
                if (gesundheitFollowUpKeywords.some(keyword => query.includes(keyword))) {
                    return {
                        type: 'gesundheit',
                        needs: ['kontakt', 'informationen', 'termin'],
                        specific: 'follow_up'
                    };
                }
            }
            
            // Bildung-Follow-up Erkennung
            if (previousType === 'bildung') {
                const bildungFollowUpKeywords = ['unterlagen', 'dokumente', 'papiere', 'schule', 'kindergarten', 'anmeldung', 'zeugnis', 'noten'];
                if (bildungFollowUpKeywords.some(keyword => query.includes(keyword))) {
                    return {
                        type: 'bildung',
                        needs: ['anmeldung', 'informationen', 'kontakt'],
                        specific: 'follow_up'
                    };
                }
            }
        }
        
        // Suche passende Intention
        for (const intention of intentions) {
            if (intention.keywords.some(keyword => query.includes(keyword))) {
                return {
                    type: intention.type,
                    needs: intention.needs,
                    specific: this.extractSpecificForm(query)
                };
            }
        }
        
        // Fallback f√ºr unbekannte Anliegen
        return {
            type: 'general_inquiry',
            needs: ['informationen', 'beratung', 'kontakt'],
            specific: null
        };
    }

    /**
     * Pr√ºft, ob es sich um eine Action-orientierte Antwort handelt
     */
    isActionOrientedResponse(intention) {
        const actionOrientedTypes = [
            'bauantrag', 'kfz_zulassung', 'f√ºhrerschein', 'gewerbe',
            'soziales', 'wohngeld', 'pflege', 'gesundheit', 'impfung',
            'bildung', 'studium', 'umwelt', 'wasser', 'notfall',
            'formular', 'termin', 'kontakt', '√∂ffnungszeiten'
        ];
        
        return actionOrientedTypes.includes(intention.type);
    }

    /**
     * Pr√ºft, ob es sich um eine Begr√º√üung handelt
     */
    isGreeting(query) {
        const greetings = ['moin', 'hallo', 'hi', 'hey', 'guten tag', 'guten morgen', 'guten abend'];
        const queryLower = query.toLowerCase().trim();
        
        return greetings.includes(queryLower) || queryLower.length <= 10;
    }

    /**
     * UNIVERSALE B√ºrgerzentrierte Antwort-Generierung
     * Funktioniert f√ºr ALLE B√ºrger und ALLE Anliegen
     */
    generateDirectResponse(query, intention, personaAnalysis) {
        // BEGR√úSSUNGEN - Keine LLM-Enhancement
        if (this.isGreeting(query)) {
            return this.generateGreetingResponse(intention, personaAnalysis);
        }
        
        // 1. TONE basierend auf emotionalem Zustand
        const tone = this.determineTone(intention.emotionalState, intention.urgency);
        
        // 2. ACCESSIBILITY-Anpassungen
        const accessibilityAdaptations = this.getAccessibilityAdaptations(intention.accessibilityNeeds);
        
        // 3. CITIZEN-TYPE-Anpassungen
        const citizenAdaptations = this.getCitizenTypeAdaptations(intention.citizenType);
        
        // 4. LANGUAGE-Anpassungen
        const languageAdaptations = this.getLanguageAdaptations(intention.language);
        
        // 5. Spezifische Antwort generieren
        const baseResponse = this.generateSpecificResponse(intention, tone);
        
        // 6. Alle Anpassungen kombinieren
        return this.combineAdaptations(baseResponse, {
            accessibility: accessibilityAdaptations,
            citizenType: citizenAdaptations,
            language: languageAdaptations,
            urgency: intention.urgency
        });
    }

    /**
     * Generiert eine einfache Begr√º√üungsantwort mit regionalem Humor f√ºr Landkreis Oldenburg
     */
    generateGreetingResponse(intention, personaAnalysis) {
        const citizenType = intention.citizenType;
        const language = intention.language;
        
        let greeting = "Moin! Ich bin KAYA, Ihr kommunaler KI-Assistent f√ºr den Landkreis Oldenburg. Wie kann ich Ihnen heute helfen?";
        
        // Anpassung f√ºr verschiedene B√ºrger-Typen mit regionalem Humor
        if (citizenType === 'senior') {
            greeting = "Moin! Ich bin KAYA, Ihr digitaler Assistent f√ºr den Landkreis Oldenburg. Wie kann ich Ihnen heute helfen?";
        } else if (citizenType === 'youth') {
            greeting = "Moin! Ich bin KAYA, Ihr digitaler Assistent. Wie kann ich dir heute helfen?";
        } else if (citizenType === 'family') {
            greeting = "Moin! Ich bin KAYA, Ihr kommunaler KI-Assistent. Wie kann ich Ihrer Familie heute helfen?";
        } else if (citizenType === 'migrant') {
            greeting = "Moin! Ich bin KAYA, Ihr digitaler Assistent. Wie kann ich Ihnen heute helfen?";
        } else if (citizenType === 'disabled') {
            greeting = "Moin! Ich bin KAYA, Ihr barrierefreier digitaler Assistent. Wie kann ich Ihnen heute helfen?";
        }
        
        // Erweiterte Sprach-Anpassung f√ºr Landkreis Oldenburg
        if (language === 'english') {
            greeting = "Hello! I'm KAYA, your digital assistant for Landkreis Oldenburg. How can I help you today?";
        } else if (language === 'turkish') {
            greeting = "Merhaba! Ben KAYA, Landkreis Oldenburg i√ßin dijital asistanƒ±nƒ±zƒ±m. Bug√ºn size nasƒ±l yardƒ±mcƒ± olabilirim?";
        } else if (language === 'arabic') {
            greeting = "ŸÖÿ±ÿ≠ÿ®ÿß! ÿ£ŸÜÿß KAYAÿå ŸÖÿ≥ÿßÿπÿØŸÉ ÿßŸÑÿ±ŸÇŸÖŸä ŸÑŸÖŸÇÿßÿ∑ÿπÿ© ÿ£ŸàŸÑÿØŸÜÿ®Ÿàÿ±ÿ∫. ŸÉŸäŸÅ ŸäŸÖŸÉŸÜŸÜŸä ŸÖÿ≥ÿßÿπÿØÿ™ŸÉ ÿßŸÑŸäŸàŸÖÿü";
        } else if (language === 'polish') {
            greeting = "Dzie≈Ñ dobry! Jestem KAYA, Tw√≥j cyfrowy asystent dla Landkreis Oldenburg. Jak mogƒô Ci dzi≈õ pom√≥c?";
        } else if (language === 'russian') {
            greeting = "–ü—Ä–∏–≤–µ—Ç! –Ø KAYA, –≤–∞—à —Ü–∏—Ñ—Ä–æ–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è Landkreis Oldenburg. –ö–∞–∫ —è –º–æ–≥—É –≤–∞–º –ø–æ–º–æ—á—å —Å–µ–≥–æ–¥–Ω—è?";
        } else if (language === 'romanian') {
            greeting = "BunƒÉ! Sunt KAYA, asistentul dvs. digital pentru Landkreis Oldenburg. Cum vƒÉ pot ajuta astƒÉzi?";
        } else if (language === 'ukrainian') {
            greeting = "–ü—Ä–∏–≤—ñ—Ç! –Ø KAYA, –≤–∞—à —Ü–∏—Ñ—Ä–æ–≤–∏–π –ø–æ–º—ñ—á–Ω–∏–∫ –¥–ª—è Landkreis Oldenburg. –Ø–∫ —è –º–æ–∂—É –≤–∞–º –¥–æ–ø–æ–º–æ–≥—Ç–∏ —Å—å–æ–≥–æ–¥–Ω—ñ?";
        } else if (language === 'dutch') {
            greeting = "Hallo! Ik ben KAYA, uw digitale assistent voor Landkreis Oldenburg. Hoe kan ik u vandaag helpen?";
        } else if (language === 'danish') {
            greeting = "Hej! Jeg er KAYA, din digitale assistent for Landkreis Oldenburg. Hvordan kan jeg hj√¶lpe dig i dag?";
        } else if (language === 'plattdeutsch') {
            greeting = "Moin! Ik bin KAYA, dien digitalen Assistent f√∂r den Landkreis Oldenburg. Wo kann ik di h√º√ºt helpen?";
        }
        
        return {
            response: greeting,
            links: [],
            fallback: false
        };
    }

    /**
     * Bestimmt den richtigen Ton f√ºr alle B√ºrger
     */
    determineTone(emotionalState, urgency) {
        if (urgency === 'critical') {
            return 'urgent_helpful';
        }
        if (emotionalState === 'frustrated') {
            return 'calming_reassuring';
        }
        if (emotionalState === 'anxious') {
            return 'gentle_supportive';
        }
        if (emotionalState === 'positive') {
            return 'enthusiastic_helpful';
        }
        return 'friendly_professional';
    }

    /**
     * Barrierefreiheits-Anpassungen (inklusiv)
     */
    getAccessibilityAdaptations(needs) {
        const adaptations = {
            visual: {
                emphasis: '**', // Markdown f√ºr Screen Reader
                structure: 'clear_headers',
                links: 'descriptive_text'
            },
            hearing: {
                emphasis: 'üìû', // Visuelle Hinweise
                structure: 'written_instructions',
                links: 'text_based'
            },
            mobility: {
                emphasis: '‚ôø', // Barrierefreiheit-Symbol
                structure: 'step_by_step',
                links: 'accessible_locations'
            },
            simple_language: {
                emphasis: 'üìù', // Einfache Sprache
                structure: 'short_sentences',
                links: 'easy_explanations'
            }
        };
        
        return needs.map(need => adaptations[need]).filter(Boolean);
    }

    /**
     * B√ºrger-Typ-Anpassungen (inklusiv)
     */
    getCitizenTypeAdaptations(citizenType) {
        const adaptations = {
            senior: {
                tone: 'respectful_patient',
                structure: 'detailed_step_by_step',
                emphasis: 'clear_explanations'
            },
            youth: {
                tone: 'modern_friendly',
                structure: 'quick_direct',
                emphasis: 'digital_options'
            },
            family: {
                tone: 'warm_supportive',
                structure: 'family_focused',
                emphasis: 'child_friendly_options'
            },
            migrant: {
                tone: 'welcoming_helpful',
                structure: 'multilingual_support',
                emphasis: 'cultural_sensitivity'
            },
            disabled: {
                tone: 'inclusive_supportive',
                structure: 'accessible_format',
                emphasis: 'accommodation_options'
            },
            general: {
                tone: 'professional_friendly',
                structure: 'standard_format',
                emphasis: 'comprehensive_info'
            }
        };
        
        return adaptations[citizenType] || adaptations.general;
    }

    /**
     * Sprach-Anpassungen (inklusiv) f√ºr Landkreis Oldenburg
     */
    getLanguageAdaptations(language) {
        const adaptations = {
            english: {
                greeting: 'Hello!',
                closing: 'If you need help in German, just ask!',
                emphasis: 'üá¨üáß'
            },
            turkish: {
                greeting: 'Merhaba!',
                closing: 'Almanca yardƒ±ma ihtiyacƒ±nƒ±z varsa, sadece sorun!',
                emphasis: 'üáπüá∑'
            },
            arabic: {
                greeting: 'ŸÖÿ±ÿ≠ÿ®ÿß!',
                closing: 'ÿ•ÿ∞ÿß ŸÉŸÜÿ™ ÿ™ÿ≠ÿ™ÿßÿ¨ ŸÖÿ≥ÿßÿπÿØÿ© ÿ®ÿßŸÑŸÑÿ∫ÿ© ÿßŸÑÿ£ŸÑŸÖÿßŸÜŸäÿ©ÿå ŸÅŸÇÿ∑ ÿßÿ≥ÿ£ŸÑ!',
                emphasis: 'üá∏üá¶'
            },
            polish: {
                greeting: 'Dzie≈Ñ dobry!',
                closing: 'Je≈õli potrzebujesz pomocy w jƒôzyku niemieckim, po prostu zapytaj!',
                emphasis: 'üáµüá±'
            },
            russian: {
                greeting: '–ü—Ä–∏–≤–µ—Ç!',
                closing: '–ï—Å–ª–∏ –≤–∞–º –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å –Ω–∞ –Ω–µ–º–µ—Ü–∫–æ–º —è–∑—ã–∫–µ, –ø—Ä–æ—Å—Ç–æ —Å–ø—Ä–æ—Å–∏—Ç–µ!',
                emphasis: 'üá∑üá∫'
            },
            romanian: {
                greeting: 'BunƒÉ!',
                closing: 'DacƒÉ ave»õi nevoie de ajutor √Æn limba germanƒÉ, doar √Æntreba»õi!',
                emphasis: 'üá∑üá¥'
            },
            ukrainian: {
                greeting: '–ü—Ä–∏–≤—ñ—Ç!',
                closing: '–Ø–∫—â–æ –≤–∞–º –ø–æ—Ç—Ä—ñ–±–Ω–∞ –¥–æ–ø–æ–º–æ–≥–∞ –Ω—ñ–º–µ—Ü—å–∫–æ—é –º–æ–≤–æ—é, –ø—Ä–æ—Å—Ç–æ –∑–∞–ø–∏—Ç–∞–π—Ç–µ!',
                emphasis: 'üá∫üá¶'
            },
            dutch: {
                greeting: 'Hallo!',
                closing: 'Als je hulp nodig hebt in het Duits, vraag het gewoon!',
                emphasis: 'üá≥üá±'
            },
            danish: {
                greeting: 'Hej!',
                closing: 'Hvis du har brug for hj√¶lp p√• tysk, sp√∏rg bare!',
                emphasis: 'üá©üá∞'
            },
            plattdeutsch: {
                greeting: 'Moin!',
                closing: 'Ik helpe di gern wieter!',
                emphasis: 'üè¥Û†ÅßÛ†Å¢Û†Å≥Û†Å£Û†Å¥Û†Åø'
            },
            german: {
                greeting: 'Moin!',
                closing: 'Gerne helfe ich Ihnen weiter!',
                emphasis: 'üá©üá™'
            }
        };
        
        return adaptations[language] || adaptations.german;
    }

    /**
     * Universelle Funktion f√ºr konkrete Fragen-Erkennung
     */
    analyzeConcreteQuestion(query, intentionType) {
        const lowerQuery = query.toLowerCase();
        
        // Universelle Keywords f√ºr alle Bereiche
        const fahrenKeywords = ['darf ich', 'kann ich', 'ist das erlaubt', 'darf ich damit', 'kann ich damit'];
        const fahrenActions = ['fahren', 'losfahren', 'fahren', 'fahre', 'fahrt'];
        const fahrenQuestions = ['was passiert', 'was kostet', 'wie lange', 'wie teuer', 'wie viel'];
        const emotionalKeywords = ['kompliziert', 'schwierig', 'verstehe nicht', 'angst', 'sorge', 'nerv√∂s', 'eilig', 'heute noch', 'schnell'];
        const practicalKeywords = ['unterlagen', 'dokumente', 'papiere', 'wo ist', 'adresse', 'ort', 'online', 'internet', 'digital'];
        const targetGroupKeywords = ['sohn', 'tochter', 'kinder', 'deutsch', 'sprache', 'verstehe', 'laufen', 'rollstuhl', 'behindert'];
        
        // Pr√ºfe ob konkrete Frage erkannt wird
        const isConcreteQuestion = (fahrenKeywords.some(keyword => lowerQuery.includes(keyword)) && 
             fahrenActions.some(action => lowerQuery.includes(action))) ||
            fahrenQuestions.some(question => lowerQuery.includes(question)) ||
            emotionalKeywords.some(keyword => lowerQuery.includes(keyword)) ||
            practicalKeywords.some(keyword => lowerQuery.includes(keyword)) ||
            targetGroupKeywords.some(keyword => lowerQuery.includes(keyword));
        
        if (!isConcreteQuestion) return null;
        
        // Erkenne spezifische Fragen
        let specificAnswer = '';
        let emotionalSupport = '';
        let targetGroupHelp = '';
        
        // EMOTIONALE ZUST√ÑNDE ERKENNEN
        if (lowerQuery.includes('kompliziert') || lowerQuery.includes('schwierig') || lowerQuery.includes('verstehe nicht')) {
            emotionalSupport = '**Keine Sorge!** Ich erkl√§re dir alles Schritt f√ºr Schritt. Das ist gar nicht so kompliziert! üòä\n\n';
        } else if (lowerQuery.includes('angst') || lowerQuery.includes('sorge') || lowerQuery.includes('nerv√∂s')) {
            emotionalSupport = '**Alles gut!** Wir sind hier um dir zu helfen. Das Amt ist freundlich und hilfsbereit! ü§ó\n\n';
        } else if (lowerQuery.includes('eilig') || lowerQuery.includes('heute noch') || lowerQuery.includes('schnell')) {
            emotionalSupport = '**Verstehe ich!** Lass uns das schnell l√∂sen. Du kannst noch heute einen Termin bekommen! ‚ö°\n\n';
        }
        
        // SPEZIFISCHE FRAGEN
        if (lowerQuery.includes('was passiert')) {
            specificAnswer = this.getConsequenceAnswer(intentionType);
        } else if (lowerQuery.includes('was kostet') || lowerQuery.includes('wie teuer') || lowerQuery.includes('wie viel')) {
            specificAnswer = this.getCostAnswer(intentionType);
        } else if (lowerQuery.includes('wie lange')) {
            specificAnswer = this.getTimeAnswer(intentionType);
        } else if (lowerQuery.includes('unterlagen') || lowerQuery.includes('dokumente') || lowerQuery.includes('papiere')) {
            specificAnswer = this.getDocumentAnswer(intentionType);
        } else if (lowerQuery.includes('wo ist') || lowerQuery.includes('adresse') || lowerQuery.includes('ort')) {
            specificAnswer = this.getLocationAnswer(intentionType);
        } else if (lowerQuery.includes('online') || lowerQuery.includes('internet') || lowerQuery.includes('digital')) {
            specificAnswer = this.getOnlineAnswer(intentionType);
        }
        
        // ZIELGRUPPEN-SPEZIFISCHE HILFE
        if (lowerQuery.includes('sohn') || lowerQuery.includes('tochter') || lowerQuery.includes('kinder')) {
            targetGroupHelp = '**F√ºr Senioren:** Dein Sohn kann dir helfen! Du kannst auch eine Vollmacht mitbringen.\n\n';
        } else if (lowerQuery.includes('deutsch') || lowerQuery.includes('sprache') || lowerQuery.includes('verstehe')) {
            targetGroupHelp = '**Mehrsprachige Hilfe:** Wir haben Dolmetscher! Ruf einfach an: 04431 85-0\n\n';
        } else if (lowerQuery.includes('laufen') || lowerQuery.includes('rollstuhl') || lowerQuery.includes('behindert')) {
            targetGroupHelp = '**Barrierefreiheit:** Das Geb√§ude ist rollstuhlgerecht! Parkpl√§tze direkt vor der T√ºr.\n\n';
        }
        
        return {
            specificAnswer,
            emotionalSupport,
            targetGroupHelp
        };
    }
    
    /**
     * Hilfsfunktionen f√ºr spezifische Antworten
     */
    getConsequenceAnswer(intentionType) {
        const consequences = {
            'kfz_zulassung': '**Was passiert wenn du ohne Zulassung f√§hrst:**\n‚Ä¢ **Bu√ügeld:** 70-120‚Ç¨\n‚Ä¢ **Punkte:** 1 Punkt in Flensburg\n‚Ä¢ **Versicherung:** Deckt NICHT bei Unfall\n‚Ä¢ **Polizei:** Kann Fahrzeug beschlagnahmen\n\n',
            'bauantrag': '**Was passiert ohne Baugenehmigung:**\n‚Ä¢ **Bu√ügeld:** 500-50.000‚Ç¨\n‚Ä¢ **R√ºckbau:** Muss abgerissen werden\n‚Ä¢ **Versicherung:** Deckt NICHT bei Sch√§den\n‚Ä¢ **Nachbarn:** K√∂nnen klagen\n\n',
            'f√ºhrerschein': '**Was passiert ohne F√ºhrerschein:**\n‚Ä¢ **Bu√ügeld:** 10-15‚Ç¨\n‚Ä¢ **Fahrzeug:** Wird beschlagnahmt\n‚Ä¢ **Versicherung:** Deckt NICHT bei Unfall\n‚Ä¢ **Strafverfahren:** M√∂glich\n\n'
        };
        return consequences[intentionType] || '**Konsequenzen:** Ohne Genehmigung kann es teuer werden!\n\n';
    }
    
    getCostAnswer(intentionType) {
        const costs = {
            'kfz_zulassung': '**Was kostet die KFZ-Zulassung:**\n‚Ä¢ **Zulassung:** 26,80‚Ç¨\n‚Ä¢ **Kennzeichen:** 10,20‚Ç¨\n‚Ä¢ **EVB-Nummer:** 7,50‚Ç¨\n‚Ä¢ **Gesamt:** ca. 45‚Ç¨\n\n',
            'bauantrag': '**Was kostet ein Bauantrag:**\n‚Ä¢ **Baugenehmigung:** 0,5% des Bauwerts\n‚Ä¢ **Grundgeb√ºhr:** 25‚Ç¨\n‚Ä¢ **Nebenkosten:** 50-200‚Ç¨\n‚Ä¢ **Gesamt:** je nach Bauvorhaben\n\n',
            'f√ºhrerschein': '**Was kostet ein F√ºhrerschein:**\n‚Ä¢ **Antrag:** 43,40‚Ç¨\n‚Ä¢ **F√ºhrerschein:** 24,30‚Ç¨\n‚Ä¢ **Sehtest:** 6,43‚Ç¨\n‚Ä¢ **Gesamt:** ca. 75‚Ç¨\n\n'
        };
        return costs[intentionType] || '**Kosten:** Je nach Anliegen unterschiedlich. Ruf an: 04431 85-0\n\n';
    }
    
    getTimeAnswer(intentionType) {
        const times = {
            'kfz_zulassung': '**Wie lange dauert die Zulassung:**\n‚Ä¢ **Termin:** 15-30 Minuten\n‚Ä¢ **Bearbeitung:** Sofort\n‚Ä¢ **Kennzeichen:** Sofort verf√ºgbar\n‚Ä¢ **Fahrzeugschein:** Sofort mit\n\n',
            'bauantrag': '**Wie lange dauert ein Bauantrag:**\n‚Ä¢ **Bearbeitung:** 1-3 Monate\n‚Ä¢ **Genehmigung:** 2-4 Wochen\n‚Ä¢ **Widerspruch:** 1 Monat\n‚Ä¢ **Baubeginn:** Nach Genehmigung\n\n',
            'f√ºhrerschein': '**Wie lange dauert ein F√ºhrerschein:**\n‚Ä¢ **Antrag:** 15-30 Minuten\n‚Ä¢ **Bearbeitung:** 2-4 Wochen\n‚Ä¢ **F√ºhrerschein:** Per Post\n‚Ä¢ **G√ºltigkeit:** 15 Jahre\n\n'
        };
        return times[intentionType] || '**Bearbeitungszeit:** Je nach Anliegen unterschiedlich. Ruf an: 04431 85-0\n\n';
    }
    
    getDocumentAnswer(intentionType) {
        const documents = {
            'kfz_zulassung': '**Welche Unterlagen du brauchst:**\n‚Ä¢ **Personalausweis** oder Reisepass\n‚Ä¢ **EVB-Nummer** von der Versicherung\n‚Ä¢ **Fahrzeugbrief** und Fahrzeugschein\n‚Ä¢ **Altes Kennzeichen** (falls gew√ºnscht)\n\n',
            'bauantrag': '**Welche Unterlagen du brauchst:**\n‚Ä¢ **Grundst√ºcksnachweis** (Grundbuchauszug)\n‚Ä¢ **Bauzeichnungen** (Ma√üstab 1:100)\n‚Ä¢ **Statik** (bei gr√∂√üeren Bauten)\n‚Ä¢ **Baubeschreibung** und Kostenberechnung\n\n',
            'f√ºhrerschein': '**Welche Unterlagen du brauchst:**\n‚Ä¢ **Personalausweis** oder Reisepass\n‚Ä¢ **Sehtest** (nicht √§lter als 2 Jahre)\n‚Ä¢ **Erste-Hilfe-Kurs** (nicht √§lter als 2 Jahre)\n‚Ä¢ **Biometrisches Foto** (35x45mm)\n\n'
        };
        return documents[intentionType] || '**Unterlagen:** Je nach Anliegen unterschiedlich. Ruf an: 04431 85-0\n\n';
    }
    
    getLocationAnswer(intentionType) {
        return '**Wo ist die zust√§ndige Stelle:**\n‚Ä¢ **Adresse:** Delmenhorster Stra√üe 6, 27793 Wildeshausen\n‚Ä¢ **√ñffnungszeiten:** Mo-Do 8-16 Uhr, Fr 8-13 Uhr\n‚Ä¢ **Parkpl√§tze:** Direkt vor dem Geb√§ude\n‚Ä¢ **Barrierefrei:** Rollstuhlgerecht\n\n';
    }
    
    getOnlineAnswer(intentionType) {
        return '**Online-Services:**\n‚Ä¢ **Termin buchen:** Online m√∂glich\n‚Ä¢ **Formulare:** Online ausf√ºllen\n‚Ä¢ **Antrag:** Teilweise online\n‚Ä¢ **Status:** Online abfragen\n\n';
    }

    /**
     * Generiert spezifische Antworten f√ºr alle Anliegen
     */
    generateSpecificResponse(intention, tone) {
        const responseMap = {
            // Verwaltung
            'bauantrag': () => this.generateBauantragResponse(intention, tone),
            'kfz_zulassung': () => this.generateKFZZulassungResponse(intention, tone),
            'f√ºhrerschein': () => this.generateF√ºhrerscheinResponse(intention, tone),
            'gewerbe': () => this.generateGewerbeResponse(intention, tone),
            
            // Soziales
            'soziales': () => this.generateSozialesResponse(intention, tone),
            'wohngeld': () => this.generateWohngeldResponse(intention, tone),
            'pflege': () => this.generatePflegeResponse(intention, tone),
            
            // Gesundheit
            'gesundheit': () => this.generateGesundheitResponse(intention, tone),
            'impfung': () => this.generateImpfungResponse(intention, tone),
            
            // Bildung
            'bildung': () => this.generateBildungResponse(intention, tone),
            'studium': () => this.generateStudiumResponse(intention, tone),
            
            // Umwelt
            'umwelt': () => this.generateUmweltResponse(intention, tone),
            'wasser': () => this.generateWasserResponse(intention, tone),
            
            // Allgemeine Verwaltung
            'formular': () => this.generateFormularResponse(intention, tone),
            'termin': () => this.generateTerminResponse(intention, tone),
            'kontakt': () => this.generateKontaktResponse(intention, tone),
            '√∂ffnungszeiten': () => this.generate√ñffnungszeitenResponse(intention, tone),
            
            // Notf√§lle
            'notfall': () => this.generateNotfallResponse(intention, tone),
            
            // Erweiterte Landkreis-spezifische Anliegen
            'landwirtschaft': () => this.generateLandwirtschaftResponse(intention, tone),
            'tierhaltung': () => this.generateTierhaltungResponse(intention, tone),
            'handwerk': () => this.generateHandwerkResponse(intention, tone),
            'ausbildung': () => this.generateAusbildungResponse(intention, tone),
            'studium': () => this.generateStudiumResponse(intention, tone),
            'baf√∂g': () => this.generateBaf√∂gResponse(intention, tone),
            'arbeitslosigkeit': () => this.generateArbeitslosigkeitResponse(intention, tone),
            'rente': () => this.generateRenteResponse(intention, tone),
            'senioren': () => this.generateSeniorenResponse(intention, tone),
            'alleinerziehende': () => this.generateAlleinerziehendeResponse(intention, tone),
            'unterhalt': () => this.generateUnterhaltResponse(intention, tone),
            'behinderung': () => this.generateBehinderungResponse(intention, tone),
            'migration': () => this.generateMigrationResponse(intention, tone),
            'aufenthaltsrecht': () => this.generateAufenthaltsrechtResponse(intention, tone),
            'eu_b√ºrger': () => this.generateEUB√ºrgerResponse(intention, tone),
            'kleinunternehmer': () => this.generateKleinunternehmerResponse(intention, tone),
            'steuern': () => this.generateSteuernResponse(intention, tone),
            
            // Fallback
            'general_inquiry': () => this.generateGeneralResponse(intention, tone)
        };
        
        const responseGenerator = responseMap[intention.type] || responseMap['general_inquiry'];
        return responseGenerator();
    }

    /**
     * Kombiniert alle Anpassungen f√ºr universelle Antworten
     */
    combineAdaptations(baseResponse, adaptations) {
        let response = baseResponse.response;
        
        // Accessibility-Anpassungen
        if (adaptations.accessibility.length > 0) {
            adaptations.accessibility.forEach(adaptation => {
                if (adaptation.emphasis) {
                    response = response.replace(/\*\*/g, adaptation.emphasis);
                }
            });
        }
        
        // Citizen-Type-Anpassungen
        if (adaptations.citizenType) {
            const greeting = adaptations.citizenType.tone === 'respectful_patient' ? 'Sehr geehrte Damen und Herren,' : 'Moin!';
            response = response.replace(/Moin!/g, greeting);
        }
        
        // Language-Anpassungen
        if (adaptations.language) {
            response = adaptations.language.greeting + ' ' + response.replace(/Moin!/g, '');
            response += '\n\n' + adaptations.language.closing;
        }
        
        // Urgency-Anpassungen
        if (adaptations.urgency === 'critical') {
            response = 'üö® ' + response;
        }
        
        return {
            response: response,
            links: baseResponse.links,
            urgency: adaptations.urgency,
            accessibility: adaptations.accessibility,
            citizenType: adaptations.citizenType,
            language: adaptations.language
        };
    }

    generateBauantragResponse(intention, tone) {
        const location = intention.location ? ` in ${intention.location}` : '';
        const urgency = intention.urgency === 'high' ? ' Ich verstehe, dass es eilig ist.' : '';
        
        // Pr√ºfe auf konkrete Fragen
        const concreteQuestion = this.analyzeConcreteQuestion(intention.query, 'bauantrag');
        
        if (concreteQuestion) {
            return {
                response: `Moin! **NEIN, du darfst NICHT einfach losbauen!** üö´

Du brauchst **erst eine Baugenehmigung**! Ohne Genehmigung ist das **illegal** und kann teuer werden.

${concreteQuestion.emotionalSupport}${concreteQuestion.specificAnswer}${concreteQuestion.targetGroupHelp}**üéØ Hier ist dein direkter Weg zur Baugenehmigung:**

**1. üìã Online-Bauantrag:**
   ‚Üí [Bauantrag online](https://www.oldenburg-kreis.de/planen-und-bauen/bauen-im-landkreis-oldenburg/bauantrag-online/)

**2. üìÑ Formulare ausf√ºllen:**
   ‚Üí [Bauantrag-Formulare](https://www.oldenburg-kreis.de/planen-und-bauen/bauen-im-landkreis-oldenburg/antraege-und-formulare/)

**3. üìû Beratung:**
   ‚Üí **04431 85-0** (Mo-Fr 8-16 Uhr)

**üéØ Deine n√§chste Aktion:** Klick auf den Bauantrag-Link oder ruf direkt an!

**Brauchst du Hilfe bei den Unterlagen? Sag mir, was du schon hast!**`,
                links: [
                    { title: 'Bauantrag online', url: 'https://www.oldenburg-kreis.de/planen-und-bauen/bauen-im-landkreis-oldenburg/bauantrag-online/' },
                    { title: 'Bauantrag-Formulare', url: 'https://www.oldenburg-kreis.de/planen-und-bauen/bauen-im-landkreis-oldenburg/antraege-und-formulare/' }
                ]
            };
        }
        
        // Standard Bauantrag-Response
        return {
            response: `Moin! Perfekt - ich helfe dir sofort beim Bauantrag${location}.${urgency}

**üéØ Hier ist dein direkter Weg:**

**1. üìã Online-Bauantrag:**
   ‚Üí [Bauantrag online](https://www.oldenburg-kreis.de/planen-und-bauen/bauen-im-landkreis-oldenburg/bauantrag-online/)

**2. üìÑ Formulare ausf√ºllen:**
   ‚Üí [Bauantrag-Formulare](https://www.oldenburg-kreis.de/planen-und-bauen/bauen-im-landkreis-oldenburg/antraege-und-formulare/)

**3. üìû Beratung:**
   ‚Üí **04431 85-0** (Mo-Fr 8-16 Uhr)

**üéØ Deine n√§chste Aktion:** Klick auf den Bauantrag-Link oder ruf direkt an!

**Brauchst du Hilfe bei den Unterlagen? Sag mir, was du schon hast!**`,
            links: [
                { title: 'Bauantrag online', url: 'https://www.oldenburg-kreis.de/planen-und-bauen/bauen-im-landkreis-oldenburg/bauantrag-online/' },
                { title: 'Bauantrag-Formulare', url: 'https://www.oldenburg-kreis.de/planen-und-bauen/bauen-im-landkreis-oldenburg/antraege-und-formulare/' }
            ]
        };
    }

    generateFormularResponse(intention, tone) {
        const specific = intention.specific ? ` f√ºr ${intention.specific}` : '';
        
        return {
            response: `Hier sind die wichtigsten Formulare${specific}:

**Direkte Downloads:**
‚Ä¢ [Alle Antr√§ge und Formulare](https://www.oldenburg-kreis.de/planen-und-bauen/bauen-im-landkreis-oldenburg/antraege-und-formulare/)
‚Ä¢ [Online-Services](https://www.oldenburg-kreis.de/portal/)

**Schnelle Hilfe:**
‚Ä¢ **Tel.: 04431 85-0** - Wir helfen beim Ausf√ºllen
‚Ä¢ **E-Mail:** kontakt@landkreis-oldenburg.de

Welches Formular ben√∂tigen Sie genau? Dann kann ich Ihnen den direkten Link geben.`,
            links: [
                { title: 'Alle Antr√§ge und Formulare', url: 'https://www.oldenburg-kreis.de/planen-und-bauen/bauen-im-landkreis-oldenburg/antraege-und-formulare/' },
                { title: 'Online-Services', url: 'https://www.oldenburg-kreis.de/portal/' }
            ]
        };
    }

    generateKontaktResponse(intention, tone) {
        return {
            response: `**Direkte Kontakte:**

**Hauptnummer:** 04431 85-0
‚Ä¢ Mo-Fr: 8-16 Uhr
‚Ä¢ F√ºr alle Anliegen

**E-Mail:** kontakt@landkreis-oldenburg.de
‚Ä¢ Antwort innerhalb 24h

**Adresse:**
Landkreis Oldenburg
Delmenhorster Stra√üe 6
27793 Wildeshausen

**Online-Termin:** [Terminvereinbarung](https://www.oldenburg-kreis.de/ordnung-und-verkehr/fuehrerscheinstelle/online-terminvereinbarung/)

Wof√ºr genau brauchen Sie Kontakt? Dann kann ich Ihnen die richtige Abteilung nennen.`,
            links: [
                { title: 'Kontaktformular', url: 'https://www.oldenburg-kreis.de/portal/kontakt.html' },
                { title: 'Online-Terminvereinbarung', url: 'https://www.oldenburg-kreis.de/ordnung-und-verkehr/fuehrerscheinstelle/online-terminvereinbarung/' }
            ]
        };
    }

    generateTerminResponse(intention, tone) {
        return {
            response: `**Terminvereinbarung:**

**Online-Termin:** [Terminvereinbarung](https://www.oldenburg-kreis.de/ordnung-und-verkehr/fuehrerscheinstelle/online-terminvereinbarung/)
‚Ä¢ Schnell und einfach
‚Ä¢ Verf√ºgbare Zeiten sofort sichtbar

**Telefonisch:** 04431 85-0
‚Ä¢ Mo-Fr: 8-16 Uhr
‚Ä¢ Pers√∂nliche Beratung

**√ñffnungszeiten:**
‚Ä¢ Mo-Do: 8-16 Uhr
‚Ä¢ Fr: 8-13 Uhr

F√ºr welches Anliegen brauchen Sie einen Termin?`,
            links: [
                { title: 'Online-Terminvereinbarung', url: 'https://www.oldenburg-kreis.de/ordnung-und-verkehr/fuehrerscheinstelle/online-terminvereinbarung/' }
            ]
        };
    }

    generateKFZZulassungResponse(intention, tone) {
        const location = intention.location ? ` in ${intention.location}` : '';
        const urgency = intention.urgency === 'high' ? ' Ich verstehe, dass es eilig ist.' : '';
        
        // Erkenne konkrete Fragen und antworte direkt
        const query = intention.query || '';
        const lowerQuery = query.toLowerCase();
        
        // Direkte Frage nach Fahren ohne Zulassung - ALLE VARIANTEN
        const fahrenKeywords = ['darf ich', 'kann ich', 'ist das erlaubt', 'darf ich damit', 'kann ich damit'];
        const fahrenActions = ['fahren', 'losfahren', 'fahren', 'fahre', 'fahrt'];
        const fahrenQuestions = ['was passiert', 'was kostet', 'wie lange', 'wie teuer', 'wie viel'];
        const emotionalKeywords = ['kompliziert', 'schwierig', 'verstehe nicht', 'angst', 'sorge', 'nerv√∂s', 'eilig', 'heute noch', 'schnell'];
        const practicalKeywords = ['unterlagen', 'dokumente', 'papiere', 'wo ist', 'adresse', 'ort', 'online', 'internet', 'digital'];
        const targetGroupKeywords = ['sohn', 'tochter', 'kinder', 'deutsch', 'sprache', 'verstehe', 'laufen', 'rollstuhl', 'behindert'];
        
        if ((fahrenKeywords.some(keyword => lowerQuery.includes(keyword)) && 
             fahrenActions.some(action => lowerQuery.includes(action))) ||
            fahrenQuestions.some(question => lowerQuery.includes(question)) ||
            emotionalKeywords.some(keyword => lowerQuery.includes(keyword)) ||
            practicalKeywords.some(keyword => lowerQuery.includes(keyword)) ||
            targetGroupKeywords.some(keyword => lowerQuery.includes(keyword))) {
            
            // Erkenne spezifische Fragen
            let specificAnswer = '';
            let emotionalSupport = '';
            
            // EMOTIONALE ZUST√ÑNDE ERKENNEN
            if (lowerQuery.includes('kompliziert') || lowerQuery.includes('schwierig') || lowerQuery.includes('verstehe nicht')) {
                emotionalSupport = '**Keine Sorge!** Ich erkl√§re dir alles Schritt f√ºr Schritt. Das ist gar nicht so kompliziert! üòä\n\n';
            } else if (lowerQuery.includes('angst') || lowerQuery.includes('sorge') || lowerQuery.includes('nerv√∂s')) {
                emotionalSupport = '**Alles gut!** Wir sind hier um dir zu helfen. Das Amt ist freundlich und hilfsbereit! ü§ó\n\n';
            } else if (lowerQuery.includes('eilig') || lowerQuery.includes('heute noch') || lowerQuery.includes('schnell')) {
                emotionalSupport = '**Verstehe ich!** Lass uns das schnell l√∂sen. Du kannst noch heute einen Termin bekommen! ‚ö°\n\n';
            }
            
            // SPEZIFISCHE FRAGEN
            if (lowerQuery.includes('was passiert')) {
                specificAnswer = '**Was passiert wenn du ohne Zulassung f√§hrst:**\n‚Ä¢ **Bu√ügeld:** 70-120‚Ç¨\n‚Ä¢ **Punkte:** 1 Punkt in Flensburg\n‚Ä¢ **Versicherung:** Deckt NICHT bei Unfall\n‚Ä¢ **Polizei:** Kann Fahrzeug beschlagnahmen\n\n';
            } else if (lowerQuery.includes('was kostet') || lowerQuery.includes('wie teuer') || lowerQuery.includes('wie viel')) {
                specificAnswer = '**Was kostet die KFZ-Zulassung:**\n‚Ä¢ **Zulassung:** 26,80‚Ç¨\n‚Ä¢ **Kennzeichen:** 10,20‚Ç¨\n‚Ä¢ **EVB-Nummer:** 7,50‚Ç¨\n‚Ä¢ **Gesamt:** ca. 45‚Ç¨\n\n';
            } else if (lowerQuery.includes('wie lange')) {
                specificAnswer = '**Wie lange dauert die Zulassung:**\n‚Ä¢ **Termin:** 15-30 Minuten\n‚Ä¢ **Bearbeitung:** Sofort\n‚Ä¢ **Kennzeichen:** Sofort verf√ºgbar\n‚Ä¢ **Fahrzeugschein:** Sofort mit\n\n';
            } else if (lowerQuery.includes('unterlagen') || lowerQuery.includes('dokumente') || lowerQuery.includes('papiere')) {
                specificAnswer = '**Welche Unterlagen du brauchst:**\n‚Ä¢ **Personalausweis** oder Reisepass\n‚Ä¢ **EVB-Nummer** von der Versicherung\n‚Ä¢ **Fahrzeugbrief** und Fahrzeugschein\n‚Ä¢ **Altes Kennzeichen** (falls gew√ºnscht)\n\n';
            } else if (lowerQuery.includes('wo ist') || lowerQuery.includes('adresse') || lowerQuery.includes('ort')) {
                specificAnswer = '**Wo ist die Zulassungsstelle:**\n‚Ä¢ **Adresse:** Delmenhorster Stra√üe 6, 27793 Wildeshausen\n‚Ä¢ **√ñffnungszeiten:** Mo-Do 8-16 Uhr, Fr 8-13 Uhr\n‚Ä¢ **Parkpl√§tze:** Direkt vor dem Geb√§ude\n‚Ä¢ **Barrierefrei:** Rollstuhlgerecht\n\n';
            } else if (lowerQuery.includes('online') || lowerQuery.includes('internet') || lowerQuery.includes('digital')) {
                specificAnswer = '**Online-Services:**\n‚Ä¢ **Termin buchen:** Online m√∂glich\n‚Ä¢ **Formulare:** Online ausf√ºllen\n‚Ä¢ **Antrag:** Teilweise online\n‚Ä¢ **Status:** Online abfragen\n\n';
            }
            
            // ZIELGRUPPEN-SPEZIFISCHE HILFE
            let targetGroupHelp = '';
            if (lowerQuery.includes('sohn') || lowerQuery.includes('tochter') || lowerQuery.includes('kinder')) {
                targetGroupHelp = '**F√ºr Senioren:** Dein Sohn kann dir helfen! Du kannst auch eine Vollmacht mitbringen.\n\n';
            } else if (lowerQuery.includes('deutsch') || lowerQuery.includes('sprache') || lowerQuery.includes('verstehe')) {
                targetGroupHelp = '**Mehrsprachige Hilfe:** Wir haben Dolmetscher! Ruf einfach an: 04431 85-0\n\n';
            } else if (lowerQuery.includes('laufen') || lowerQuery.includes('rollstuhl') || lowerQuery.includes('behindert')) {
                targetGroupHelp = '**Barrierefreiheit:** Das Geb√§ude ist rollstuhlgerecht! Parkpl√§tze direkt vor der T√ºr.\n\n';
            }
            
            return {
                response: `Moin Henning! **NEIN, du darfst NICHT einfach losfahren!** üö´

Du brauchst **erst eine Zulassung**! Ohne Zulassung ist das **illegal** und kann teuer werden.

${emotionalSupport}${specificAnswer}${targetGroupHelp}**üéØ Hier ist dein direkter Weg zur Zulassung:**

**1. üìã Online-Termin buchen:**
   ‚Üí [Terminvereinbarung KFZ-Zulassung](https://www.oldenburg-kreis.de/verkehr/kfz-zulassung/terminvereinbarung/)

**2. üìÑ Formulare ausf√ºllen:**
   ‚Üí [Antragsformulare KFZ](https://www.oldenburg-kreis.de/verkehr/kfz-zulassung/formulare/)

**3. üìû Sofort anrufen:**
   ‚Üí **04431 85-0** (Mo-Fr 8-16 Uhr)

**üéØ Deine n√§chste Aktion:** Klick auf den Termin-Link oder ruf direkt an!

**Brauchst du Hilfe bei den Unterlagen? Sag mir, was du schon hast!**`,
                links: [
                    { title: 'Terminvereinbarung KFZ-Zulassung', url: 'https://www.oldenburg-kreis.de/verkehr/kfz-zulassung/terminvereinbarung/' },
                    { title: 'Antragsformulare KFZ', url: 'https://www.oldenburg-kreis.de/verkehr/kfz-zulassung/formulare/' }
                ]
            };
        }
        
        // Standard KFZ-Response
        return {
            response: `Moin! Perfekt - ich helfe dir sofort bei der KFZ-Zulassung${location}.${urgency}

**üéØ Hier ist dein direkter Weg:**

**1. üìã Online-Termin buchen:**
   ‚Üí [Terminvereinbarung KFZ-Zulassung](https://www.oldenburg-kreis.de/verkehr/kfz-zulassung/terminvereinbarung/)

**2. üìÑ Formulare ausf√ºllen:**
   ‚Üí [Antragsformulare KFZ](https://www.oldenburg-kreis.de/verkehr/kfz-zulassung/formulare/)

**3. üìû Sofort anrufen:**
   ‚Üí **04431 85-0** (Mo-Fr 8-16 Uhr)

**üéØ Deine n√§chste Aktion:** Klick auf den Termin-Link oder ruf direkt an!

**Brauchst du Hilfe bei den Unterlagen? Sag mir, was du schon hast!**`,
            links: [
                { title: 'Terminvereinbarung KFZ-Zulassung', url: 'https://www.oldenburg-kreis.de/verkehr/kfz-zulassung/terminvereinbarung/' },
                { title: 'Antragsformulare KFZ', url: 'https://www.oldenburg-kreis.de/verkehr/kfz-zulassung/formulare/' }
            ]
        };
    }

    generateF√ºhrerscheinResponse(intention, tone) {
        const location = intention.location ? ` in ${intention.location}` : '';
        const urgency = intention.urgency === 'high' ? ' Ich verstehe, dass es eilig ist.' : '';
        
        return {
            response: `Moin! Perfekt - ich helfe dir sofort beim F√ºhrerschein${location}.${urgency}

**üéØ Hier ist dein direkter Weg:**

**1. üìã Online-Termin buchen:**
   ‚Üí [Terminvereinbarung F√ºhrerscheine](https://www.oldenburg-kreis.de/ordnung-und-verkehr/fuehrerscheinstelle/terminvereinbarung-fuehrerscheine/)

**2. üìÑ Antr√§ge und Formulare:**
   ‚Üí [F√ºhrerschein-Antr√§ge](https://www.oldenburg-kreis.de/ordnung-und-verkehr/fuehrerscheinstelle/antragsarten-erforderliche-unterlagen-kosten-etc-/)

**3. üìû Sofort anrufen:**
   ‚Üí **04431 85-0** (Mo-Fr 8-16 Uhr)

**üéØ Deine n√§chste Aktion:** Klick auf den Termin-Link oder ruf direkt an!

**Brauchst du Hilfe bei den Unterlagen? Sag mir, was du schon hast!**`,
            links: [
                { title: 'Terminvereinbarung F√ºhrerscheine', url: 'https://www.oldenburg-kreis.de/ordnung-und-verkehr/fuehrerscheinstelle/terminvereinbarung-fuehrerscheine/' },
                { title: 'F√ºhrerschein-Antr√§ge', url: 'https://www.oldenburg-kreis.de/ordnung-und-verkehr/fuehrerscheinstelle/antragsarten-erforderliche-unterlagen-kosten-etc-/' }
            ]
        };
    }

    generateGewerbeResponse(intention, tone) {
        const location = intention.location ? ` in ${intention.location}` : '';
        const urgency = intention.urgency === 'high' ? ' Ich verstehe, dass es eilig ist.' : '';
        
        return {
            response: `Moin! Perfekt - ich helfe dir sofort bei der Gewerbeanmeldung${location}.${urgency}

**üéØ Hier ist dein direkter Weg:**

**1. üìã Online-Formular:**
   ‚Üí [Gewerbeanmeldung online](https://www.oldenburg-kreis.de/wirtschaft/gewerbeanmeldung/)

**2. üìÑ Antr√§ge und Formulare:**
   ‚Üí [Gewerbe-Antr√§ge](https://www.oldenburg-kreis.de/wirtschaft/gewerbeanmeldung/antraege-und-formulare/)

**3. üìû Beratung:**
   ‚Üí **04431 85-0** (Mo-Fr 8-16 Uhr)

**üéØ Deine n√§chste Aktion:** Klick auf den Gewerbe-Link oder ruf direkt an!

**Brauchst du Hilfe bei den Unterlagen? Sag mir, was du schon hast!**`,
            links: [
                { title: 'Gewerbeanmeldung online', url: 'https://www.oldenburg-kreis.de/wirtschaft/gewerbeanmeldung/' },
                { title: 'Gewerbe-Antr√§ge', url: 'https://www.oldenburg-kreis.de/wirtschaft/gewerbeanmeldung/antraege-und-formulare/' }
            ]
        };
    }

    generateGeneralResponse(query, tone) {
        return {
            response: `Moin! Ich bin KAYA, Ihr digitaler Assistent f√ºr den Landkreis Oldenburg.

**Was kann ich f√ºr Sie tun:**
‚Ä¢ Formulare und Antr√§ge
‚Ä¢ Terminvereinbarungen  
‚Ä¢ Kontakte und √ñffnungszeiten
‚Ä¢ Informationen zu allen Dienstleistungen

**Schnelle Hilfe:**
‚Ä¢ **Tel.: 04431 85-0**
‚Ä¢ **E-Mail:** kontakt@landkreis-oldenburg.de

Was genau ben√∂tigen Sie? Je konkreter Sie fragen, desto besser kann ich helfen!`,
            links: []
        };
    }

    // NEUE UNIVERSALE RESPONSE-FUNKTIONEN F√úR ALLE B√úRGERANLIEGEN

    generateSozialesResponse(intention, tone) {
        return {
            response: `Moin! Gerne helfe ich Ihnen bei sozialen Leistungen.

**üéØ Hier ist Ihr direkter Weg:**

**1. üìã Online-Services:**
   ‚Üí [Soziale Leistungen](https://www.oldenburg-kreis.de/soziales/)

**2. üìû Beratung:**
   ‚Üí **04431 85-0** (Mo-Fr 8-16 Uhr)

**3. üìÑ Formulare:**
   ‚Üí [Antr√§ge Soziales](https://www.oldenburg-kreis.de/soziales/antraege/)

**üéØ Ihre n√§chste Aktion:** Rufen Sie an oder besuchen Sie die Online-Services!

**Brauchen Sie Hilfe bei einem bestimmten Antrag?**`,
            links: [
                { title: 'Soziale Leistungen', url: 'https://www.oldenburg-kreis.de/soziales/' },
                { title: 'Antr√§ge Soziales', url: 'https://www.oldenburg-kreis.de/soziales/antraege/' }
            ]
        };
    }

    generateWohngeldResponse(intention, tone) {
        return {
            response: `Moin! Gerne helfe ich Ihnen beim Wohngeld.

**üéØ Hier ist Ihr direkter Weg:**

**1. üìã Wohngeld-Antrag:**
   ‚Üí [Wohngeld online](https://www.oldenburg-kreis.de/soziales/wohngeld/)

**2. üìû Beratung:**
   ‚Üí **04431 85-0** (Mo-Fr 8-16 Uhr)

**3. üìÑ Unterlagen:**
   ‚Üí [Wohngeld-Formulare](https://www.oldenburg-kreis.de/soziales/wohngeld/formulare/)

**üéØ Ihre n√§chste Aktion:** Antrag online stellen oder anrufen!

**Haben Sie alle Unterlagen bereit?**`,
            links: [
                { title: 'Wohngeld online', url: 'https://www.oldenburg-kreis.de/soziales/wohngeld/' },
                { title: 'Wohngeld-Formulare', url: 'https://www.oldenburg-kreis.de/soziales/wohngeld/formulare/' }
            ]
        };
    }

    generatePflegeResponse(intention, tone) {
        return {
            response: `Moin! Gerne helfe ich Ihnen bei Pflege-Angelegenheiten.

**üéØ Hier ist Ihr direkter Weg:**

**1. üìã Pflege-Services:**
   ‚Üí [Pflegeportal](https://www.oldenburg-kreis.de/soziales/pflege/)

**2. üìû Beratung:**
   ‚Üí **04431 85-0** (Mo-Fr 8-16 Uhr)

**3. üìÑ Antr√§ge:**
   ‚Üí [Pflege-Antr√§ge](https://www.oldenburg-kreis.de/soziales/pflege/antraege/)

**üéØ Ihre n√§chste Aktion:** Beratung anrufen oder Online-Services nutzen!

**Brauchen Sie Hilfe bei der Antragstellung?**`,
            links: [
                { title: 'Pflegeportal', url: 'https://www.oldenburg-kreis.de/soziales/pflege/' },
                { title: 'Pflege-Antr√§ge', url: 'https://www.oldenburg-kreis.de/soziales/pflege/antraege/' }
            ]
        };
    }

    generateGesundheitResponse(intention, tone) {
        return {
            response: `Moin! Gerne helfe ich Ihnen bei Gesundheits-Angelegenheiten.

**üéØ Hier ist Ihr direkter Weg:**

**1. üìã Gesundheits-Services:**
   ‚Üí [Gesundheitsamt](https://www.oldenburg-kreis.de/gesundheit/)

**2. üìû Beratung:**
   ‚Üí **04431 85-0** (Mo-Fr 8-16 Uhr)

**3. üìÑ Informationen:**
   ‚Üí [Gesundheits-Info](https://www.oldenburg-kreis.de/gesundheit/informationen/)

**üéØ Ihre n√§chste Aktion:** Anrufen oder Online-Informationen nutzen!

**Worum geht es genau?**`,
            links: [
                { title: 'Gesundheitsamt', url: 'https://www.oldenburg-kreis.de/gesundheit/' },
                { title: 'Gesundheits-Info', url: 'https://www.oldenburg-kreis.de/gesundheit/informationen/' }
            ]
        };
    }

    generateImpfungResponse(intention, tone) {
        return {
            response: `Moin! Gerne helfe ich Ihnen bei Impfungen.

**üéØ Hier ist Ihr direkter Weg:**

**1. üìã Impf-Termin:**
   ‚Üí [Impf-Terminvereinbarung](https://www.oldenburg-kreis.de/gesundheit/impfungen/)

**2. üìû Beratung:**
   ‚Üí **04431 85-0** (Mo-Fr 8-16 Uhr)

**3. üìÑ Informationen:**
   ‚Üí [Impf-Informationen](https://www.oldenburg-kreis.de/gesundheit/impfungen/informationen/)

**üéØ Ihre n√§chste Aktion:** Termin online buchen oder anrufen!

**Welche Impfung ben√∂tigen Sie?**`,
            links: [
                { title: 'Impf-Terminvereinbarung', url: 'https://www.oldenburg-kreis.de/gesundheit/impfungen/' },
                { title: 'Impf-Informationen', url: 'https://www.oldenburg-kreis.de/gesundheit/impfungen/informationen/' }
            ]
        };
    }

    generateBildungResponse(intention, tone) {
        return {
            response: `Moin! Gerne helfe ich Ihnen bei Bildungs-Angelegenheiten.

**üéØ Hier ist Ihr direkter Weg:**

**1. üìã Bildungs-Services:**
   ‚Üí [Bildungsportal](https://www.oldenburg-kreis.de/bildung/)

**2. üìû Beratung:**
   ‚Üí **04431 85-0** (Mo-Fr 8-16 Uhr)

**3. üìÑ Anmeldungen:**
   ‚Üí [Schul-Anmeldungen](https://www.oldenburg-kreis.de/bildung/schulen/)

**üéØ Ihre n√§chste Aktion:** Online-Services nutzen oder anrufen!

**Um welche Bildungseinrichtung geht es?**`,
            links: [
                { title: 'Bildungsportal', url: 'https://www.oldenburg-kreis.de/bildung/' },
                { title: 'Schul-Anmeldungen', url: 'https://www.oldenburg-kreis.de/bildung/schulen/' }
            ]
        };
    }

    generateStudiumResponse(intention, tone) {
        return {
            response: `Moin! Gerne helfe ich Ihnen bei Studien-Angelegenheiten.

**üéØ Hier ist Ihr direkter Weg:**

**1. üìã Studien-Informationen:**
   ‚Üí [Studienberatung](https://www.oldenburg-kreis.de/bildung/studium/)

**2. üìû Beratung:**
   ‚Üí **04431 85-0** (Mo-Fr 8-16 Uhr)

**3. üìÑ Antr√§ge:**
   ‚Üí [Studien-Antr√§ge](https://www.oldenburg-kreis.de/bildung/studium/antraege/)

**üéØ Ihre n√§chste Aktion:** Beratung anrufen oder Online-Info nutzen!

**Welche Studien-Angelegenheit betrifft Sie?**`,
            links: [
                { title: 'Studienberatung', url: 'https://www.oldenburg-kreis.de/bildung/studium/' },
                { title: 'Studien-Antr√§ge', url: 'https://www.oldenburg-kreis.de/bildung/studium/antraege/' }
            ]
        };
    }

    generateUmweltResponse(intention, tone) {
        return {
            response: `Moin! Gerne helfe ich Ihnen bei Umwelt-Angelegenheiten.

**üéØ Hier ist Ihr direkter Weg:**

**1. üìã Umwelt-Services:**
   ‚Üí [Umweltamt](https://www.oldenburg-kreis.de/umwelt/)

**2. üìû Beratung:**
   ‚Üí **04431 85-0** (Mo-Fr 8-16 Uhr)

**3. üìÑ Informationen:**
   ‚Üí [Umwelt-Info](https://www.oldenburg-kreis.de/umwelt/informationen/)

**üéØ Ihre n√§chste Aktion:** Online-Services nutzen oder anrufen!

**Um welches Umwelt-Thema geht es?**`,
            links: [
                { title: 'Umweltamt', url: 'https://www.oldenburg-kreis.de/umwelt/' },
                { title: 'Umwelt-Info', url: 'https://www.oldenburg-kreis.de/umwelt/informationen/' }
            ]
        };
    }

    generateWasserResponse(intention, tone) {
        return {
            response: `Moin! Gerne helfe ich Ihnen bei Wasser-Angelegenheiten.

**üéØ Hier ist Ihr direkter Weg:**

**1. üìã Wasser-Services:**
   ‚Üí [Wasserwirtschaft](https://www.oldenburg-kreis.de/umwelt/wasser/)

**2. üìû Beratung:**
   ‚Üí **04431 85-0** (Mo-Fr 8-16 Uhr)

**3. üìÑ Informationen:**
   ‚Üí [Wasser-Info](https://www.oldenburg-kreis.de/umwelt/wasser/informationen/)

**üéØ Ihre n√§chste Aktion:** Online-Services nutzen oder anrufen!

**Welche Wasser-Angelegenheit betrifft Sie?**`,
            links: [
                { title: 'Wasserwirtschaft', url: 'https://www.oldenburg-kreis.de/umwelt/wasser/' },
                { title: 'Wasser-Info', url: 'https://www.oldenburg-kreis.de/umwelt/wasser/informationen/' }
            ]
        };
    }

    generate√ñffnungszeitenResponse(intention, tone) {
        return {
            response: `Moin! Hier sind die √ñffnungszeiten des Landkreises Oldenburg:

**üïí √ñffnungszeiten:**

**Verwaltung:**
‚Ä¢ **Mo-Do:** 8:00 - 16:00 Uhr
‚Ä¢ **Fr:** 8:00 - 13:00 Uhr

**üìû Telefonische Erreichbarkeit:**
‚Ä¢ **Mo-Fr:** 8:00 - 16:00 Uhr
‚Ä¢ **Tel.:** 04431 85-0

**üéØ Ihre n√§chste Aktion:** Rufen Sie an oder besuchen Sie uns!

**Brauchen Sie einen Termin?**`,
            links: [
                { title: 'Terminvereinbarung', url: 'https://www.oldenburg-kreis.de/ordnung-und-verkehr/fuehrerscheinstelle/online-terminvereinbarung/' }
            ]
        };
    }

    generateNotfallResponse(intention, tone) {
        return {
            response: `üö® **NOTFALL-HILFE**

**Sofortige Hilfe:**
‚Ä¢ **Notruf:** 112 (Feuerwehr/Rettung)
‚Ä¢ **Polizei:** 110
‚Ä¢ **√Ñrztlicher Bereitschaftsdienst:** 116 117

**Landkreis Oldenburg:**
‚Ä¢ **Tel.:** 04431 85-0 (Mo-Fr 8-16 Uhr)
‚Ä¢ **E-Mail:** kontakt@landkreis-oldenburg.de

**üéØ Ihre n√§chste Aktion:** Bei Notfall sofort 112 anrufen!

**Ist es ein Notfall oder k√∂nnen wir Ihnen anderweitig helfen?**`,
            links: [
                { title: 'Notruf 112', url: 'tel:112' },
                { title: 'Polizei 110', url: 'tel:110' }
            ]
        };
    }

    /**
     * Extrahiert Ortsangaben aus der Anfrage
     */
    extractLocation(query) {
        const locations = ['wildeshausen', 'hude', 'ganderkesee', 'hatten', 'wardenburg', 'd√∂tlingen', 'gro√üenkneten'];
        const lowerQuery = query.toLowerCase();
        
        for (const location of locations) {
            if (lowerQuery.includes(location)) {
                return location.charAt(0).toUpperCase() + location.slice(1);
            }
        }
        return null;
    }

    /**
     * Extrahiert spezifische Formular-Typen
     */
    extractSpecificForm(query) {
        const forms = {
            'bauantrag': 'Bauantrag',
            'f√ºhrerschein': 'F√ºhrerschein',
            'kfz': 'KFZ-Zulassung',
            'gewerbe': 'Gewerbeanmeldung',
            'kita': 'Kita-Anmeldung',
            'wohngeld': 'Wohngeld',
            'sozialhilfe': 'Sozialhilfe'
        };
        
        const lowerQuery = query.toLowerCase();
        for (const [key, value] of Object.entries(forms)) {
            if (lowerQuery.includes(key)) {
                return value;
            }
        }
        return null;
    }
    
    generateAgentResponse(agent, query, personaAnalysis = null) {
        const agentData = this.getAgentHandler().searchAgentData(agent, query);
        
        console.log(`Agent ${agent}: ${agentData.length} Ergebnisse f√ºr "${query}"`);
        
        if (agentData.length === 0) {
            // Fallback: Zeige allgemeine Informationen √ºber den Agent
            const agentInfo = this.getAgentInfo(agent);
            let response = {
                agent: agent,
                response: `Gerne helfe ich Ihnen bei ${agentInfo.description}. ${agentInfo.suggestion}`,
                fallback: true,
                suggestion: agentInfo.suggestion,
                confidence: 0, // Keine Daten = niedrige Konfidenz
                source: 'fallback'
            };
            
            // Persona-basierte Anpassungen f√ºr Fallback
            if (personaAnalysis) {
                if (personaAnalysis.persona.persona === 'confused_citizen') {
                    response.response = `Keine Sorge, ich helfe Ihnen gerne bei ${agentInfo.description}. ${agentInfo.suggestion}`;
                } else if (personaAnalysis.persona.persona === 'urgent_case') {
                    response.response = `Ich verstehe, dass es eilig ist. F√ºr ${agentInfo.description} kann ich Ihnen schnell helfen. ${agentInfo.suggestion}`;
                }
            }
            
            return response;
        }
        
        // Validiere Datenqualit√§t vor Antwort
        const validatedData = this.validateDataQuality(agentData);
        if (validatedData.length === 0) {
            return {
                agent: agent,
                response: `Ich habe keine verl√§sslichen Informationen zu "${query}" gefunden. Bitte kontaktieren Sie uns direkt f√ºr eine pers√∂nliche Beratung.`,
                fallback: true,
                confidence: 0,
                source: 'no_valid_data'
            };
        }
        
        // Erstelle empathische, zielgerichtete Antwort
        const response = this.createEmpatheticResponse(agent, validatedData.slice(0, 3), query);
        
        return {
            agent: agent,
            response: response,
            data: validatedData.slice(0, 3),
            links: this.extractLinks(validatedData.slice(0, 3)),
            confidence: this.calculateConfidence(validatedData, query),
            source: 'agent_data'
        };
    }
    
    validateDataQuality(data) {
        // Validiere Datenqualit√§t - nur verl√§ssliche Daten verwenden
        return data.filter(item => {
            // Mindestanforderungen f√ºr valide Daten
            return item.title && 
                   item.title.length > 10 && 
                   item.url && 
                   item.url.startsWith('http') &&
                   item.content && 
                   item.content.length > 50;
        });
    }
    
    calculateConfidence(data, query) {
        if (data.length === 0) return 0;
        
        // Berechne Konfidenz basierend auf Datenqualit√§t und Relevanz
        let confidence = 0.5; // Basis-Konfidenz
        
        // Erh√∂he Konfidenz f√ºr mehr Daten
        confidence += Math.min(data.length * 0.1, 0.3);
        
        // Erh√∂he Konfidenz f√ºr exakte Matches
        const queryLower = query.toLowerCase();
        const exactMatches = data.filter(item => 
            item.title.toLowerCase().includes(queryLower) ||
            item.content.toLowerCase().includes(queryLower)
        );
        
        if (exactMatches.length > 0) {
            confidence += 0.2;
        }
        
        return Math.min(confidence, 1.0);
    }
    
    createEmpatheticResponse(agent, data, query) {
        const queryLower = query.toLowerCase();
        
        // Empathische Einleitung basierend auf dem Anliegen
        let empatheticIntro = this.getEmpatheticIntro(agent, queryLower);
        
        // Erkl√§re den Prozess und begleite den B√ºrger
        let processExplanation = this.explainProcess(agent, queryLower);
        
        // Zeige die konkreten Optionen mit Erkl√§rungen
        let options = this.presentOptionsWithGuidance(data);
        
        // Aktive Nachfragen f√ºr weitere Unterst√ºtzung
        let followUpQuestions = this.generateFollowUpQuestions(agent, queryLower);
        
        return `${empatheticIntro}\n\n${processExplanation}\n\n${options}\n\n${followUpQuestions}`;
    }
    
    getEmpatheticIntro(agent, queryLower) {
        const intros = {
            'buergerdienste': [
                "Ich verstehe, dass Beh√∂rdeng√§nge manchmal kompliziert sein k√∂nnen. Lassen Sie mich Ihnen dabei helfen, den richtigen Weg zu finden.",
                "Gerne unterst√ºtze ich Sie bei Ihrem Anliegen. Ich erkl√§re Ihnen Schritt f√ºr Schritt, was zu tun ist.",
                "Das kann ich f√ºr Sie kl√§ren! Ich begleite Sie durch den gesamten Prozess.",
                "Kein Problem, ich helfe Ihnen gerne dabei, Ihr Anliegen erfolgreich umzusetzen."
            ],
            'ratsinfo': [
                "Ich kann Ihnen gerne bei Fragen zum Kreistag helfen. Lassen Sie mich die wichtigsten Informationen f√ºr Sie zusammenstellen.",
                "Gerne informiere ich Sie √ºber die Kreistagsangelegenheiten. Ich erkl√§re Ihnen, was Sie wissen m√ºssen.",
                "Das schaue ich gerne f√ºr Sie nach. Ich f√ºhre Sie durch die verf√ºgbaren Informationen."
            ],
            'stellenportal': [
                "Ich helfe Ihnen gerne bei der Jobsuche. Lassen Sie mich die besten M√∂glichkeiten f√ºr Sie finden.",
                "Gerne unterst√ºtze ich Sie bei Ihrer Karriereplanung. Ich zeige Ihnen, welche Optionen verf√ºgbar sind."
            ],
            'kontakte': [
                "Ich kann Ihnen gerne die richtigen Ansprechpartner nennen. Lassen Sie mich die passenden Kontakte f√ºr Sie finden.",
                "Gerne helfe ich Ihnen bei der Kontaktaufnahme. Ich erkl√§re Ihnen, wen Sie wann erreichen k√∂nnen."
            ]
        };
        
        const agentIntros = intros[agent] || ["Gerne helfe ich Ihnen bei Ihrem Anliegen."];
        return agentIntros[Math.floor(Math.random() * agentIntros.length)];
    }
    
    explainProcess(agent, queryLower) {
        const explanations = {
            'buergerdienste': [
                "Hier ist der Ablauf: Zuerst schauen wir uns an, welche Formulare Sie ben√∂tigen, dann erkl√§re ich Ihnen die einzelnen Schritte und was Sie beachten m√ºssen.",
                "Der Prozess ist eigentlich ganz √ºbersichtlich: Ich zeige Ihnen die ben√∂tigten Unterlagen und erkl√§re, wie Sie vorgehen sollten.",
                "Lassen Sie mich Ihnen den Weg durch die Beh√∂rden erkl√§ren: Welche Formulare, welche Unterlagen und welche Termine Sie einhalten m√ºssen."
            ],
            'ratsinfo': [
                "Ich erkl√§re Ihnen gerne, wie Sie an die gew√ºnschten Informationen kommen und was Sie dabei beachten sollten.",
                "Lassen Sie mich Ihnen zeigen, wo Sie die aktuellen Informationen finden und wie Sie sich √ºber neue Entwicklungen informieren k√∂nnen."
            ],
            'stellenportal': [
                "Ich f√ºhre Sie gerne durch den Bewerbungsprozess und zeige Ihnen, worauf Sie achten sollten.",
                "Lassen Sie mich Ihnen erkl√§ren, wie Sie sich erfolgreich bewerben und welche Unterlagen Sie ben√∂tigen."
            ],
            'kontakte': [
                "Ich erkl√§re Ihnen gerne, wann Sie die verschiedenen Ansprechpartner erreichen und wie Sie am besten vorgehen.",
                "Lassen Sie mich Ihnen zeigen, welche Kontakte f√ºr Ihr Anliegen am besten geeignet sind."
            ]
        };
        
        const agentExplanations = explanations[agent] || ["Ich erkl√§re Ihnen gerne den Prozess."];
        return agentExplanations[Math.floor(Math.random() * agentExplanations.length)];
    }
    
    presentOptionsWithGuidance(data) {
        let options = "";
        
        data.forEach((item, index) => {
            if (item.title) {
                options += `**${item.title}**\n`;
                
                // F√ºge hilfreiche Erkl√§rung und Anleitung hinzu
                if (item.title.toLowerCase().includes('bauantrag')) {
                    options += "Das ist Ihr Hauptformular f√ºr Bauvorhaben. Sie k√∂nnen es online ausf√ºllen oder ausdrucken. Wichtig: Sammeln Sie alle ben√∂tigten Unterlagen vorher (Grundst√ºcksunterlagen, Baupl√§ne, etc.).\n";
                } else if (item.title.toLowerCase().includes('formular')) {
                    options += "Hier finden Sie das ben√∂tigte Formular. Ich empfehle Ihnen, es online auszuf√ºllen - das spart Zeit und Fehler.\n";
                } else if (item.title.toLowerCase().includes('kontakt')) {
                    options += "Hier k√∂nnen Sie direkt Kontakt aufnehmen. Ich empfehle Ihnen, vorher anzurufen, um einen Termin zu vereinbaren.\n";
                } else if (item.title.toLowerCase().includes('kreistag')) {
                    options += "Hier finden Sie alle aktuellen Informationen. Schauen Sie regelm√§√üig vorbei, um √ºber neue Beschl√ºsse informiert zu bleiben.\n";
                }
                
                if (item.url) {
                    const linkText = this.createDescriptiveLinkText(item.title, item.url);
                    options += `\nüìã **${linkText}:** [${linkText}](${item.url})\n`;
                }
            }
            
            options += "\n";
        });
        
        return options;
    }
    
    generateFollowUpQuestions(agent, queryLower) {
        const followUps = {
            'buergerdienste': [
                "Haben Sie bereits alle ben√∂tigten Unterlagen zusammen? Ich kann Ihnen dabei helfen, eine Checkliste zu erstellen.",
                "M√∂chten Sie, dass ich Ihnen die n√§chsten Schritte im Detail erkl√§re?",
                "Gibt es bestimmte Aspekte des Antrags, bei denen Sie unsicher sind?",
                "Soll ich Ihnen auch die Fristen und Bearbeitungszeiten erkl√§ren?",
                "Brauchen Sie Hilfe bei der Terminvereinbarung oder haben Sie andere Fragen zum Ablauf?"
            ],
            'ratsinfo': [
                "M√∂chten Sie mehr √ºber eine bestimmte Sitzung erfahren?",
                "Soll ich Ihnen erkl√§ren, wie Sie sich zu bestimmten Themen informieren k√∂nnen?",
                "Interessieren Sie sich f√ºr bestimmte Beschl√ºsse oder Vorlagen?",
                "M√∂chten Sie wissen, wie Sie sich bei Fragen an den Kreistag wenden k√∂nnen?"
            ],
            'stellenportal': [
                "Welche Art von Stelle suchen Sie genau? Ich kann Ihnen gezielter helfen.",
                "Haben Sie bereits eine Bewerbung vorbereitet? Ich kann Ihnen dabei helfen, sie zu optimieren.",
                "M√∂chten Sie, dass ich Ihnen Tipps f√ºr ein erfolgreiches Vorstellungsgespr√§ch gebe?",
                "Soll ich Ihnen auch andere Stellenportale empfehlen?"
            ],
            'kontakte': [
                "Haben Sie bereits versucht, Kontakt aufzunehmen? Ich kann Ihnen dabei helfen, den richtigen Ansprechpartner zu finden.",
                "M√∂chten Sie, dass ich Ihnen die besten Zeiten f√ºr einen Anruf empfehle?",
                "Soll ich Ihnen auch die E-Mail-Adressen der zust√§ndigen Mitarbeiter geben?",
                "Brauchen Sie Hilfe bei der Vorbereitung Ihres Anliegens?"
            ]
        };
        
        const agentFollowUps = followUps[agent] || ["Wie kann ich Ihnen noch helfen?"];
        const randomFollowUp = agentFollowUps[Math.floor(Math.random() * agentFollowUps.length)];
        
        return randomFollowUp;
    }
    
    getAgentInfo(agent) {
        const agentInfos = {
            'buergerdienste': {
                name: 'B√ºrgerdienst-Spezialist',
                description: 'Formulare, Antr√§ge und Dienstleistungen',
                suggestion: 'Welches Formular oder welche Dienstleistung ben√∂tigen Sie genau?'
            },
            'ratsinfo': {
                name: 'Ratsinfo-Spezialist', 
                description: 'Kreistag, Sitzungen und Beschl√ºsse',
                suggestion: 'M√∂chten Sie Informationen zu einer bestimmten Sitzung oder einem Beschluss?'
            },
            'stellenportal': {
                name: 'Stellenportal-Spezialist',
                description: 'Arbeitspl√§tze und Karriere',
                suggestion: 'Welche Art von Stelle suchen Sie?'
            },
            'kontakte': {
                name: 'Kontakt-Spezialist',
                description: 'Ansprechpartner und √ñffnungszeiten',
                suggestion: 'Welchen Bereich oder welches Amt ben√∂tigen Sie?'
            },
            'jobcenter': {
                name: 'Jobcenter-Spezialist',
                description: 'Arbeitslosengeld und Jobsuche',
                suggestion: 'Ben√∂tigen Sie Hilfe beim Arbeitslosengeld oder bei der Jobsuche?'
            },
            'schule': {
                name: 'Schul-Spezialist',
                description: 'Schulangelegenheiten und Bildung',
                suggestion: 'Welche schulische Angelegenheit betrifft Sie?'
            },
            'jugend': {
                name: 'Jugend-Spezialist',
                description: 'Jugendhilfe und Jugendamt',
                suggestion: 'Welche Jugendhilfe ben√∂tigen Sie?'
            },
            'soziales': {
                name: 'Sozial-Spezialist',
                description: 'Sozialhilfe und Sozialleistungen',
                suggestion: 'Welche Sozialleistung ben√∂tigen Sie?'
            }
        };
        
        return agentInfos[agent] || {
            name: 'Allgemeiner Assistent',
            description: 'verschiedene Bereiche',
            suggestion: 'Wie kann ich Ihnen helfen?'
        };
    }
    
    createDescriptiveLinkText(title, url) {
        // Basierend auf dem Titel eine aussagekr√§ftige Beschriftung erstellen
        const titleLower = title.toLowerCase();
        const urlLower = url.toLowerCase();
        
        // Spezifische Beschriftungen basierend auf Inhalt
        if (titleLower.includes('bauantrag') || urlLower.includes('bauantrag')) {
            return "Bauantrag-Formular";
        } else if (titleLower.includes('formular') || urlLower.includes('formular')) {
            return "Antragsformular";
        } else if (titleLower.includes('kontakt') || urlLower.includes('kontakt')) {
            return "Kontaktinformationen";
        } else if (titleLower.includes('kreistag') || urlLower.includes('kreistag')) {
            return "Kreistagsinformationen";
        } else if (titleLower.includes('jugend') || urlLower.includes('jugend')) {
            return "Jugendamt-Services";
        } else if (titleLower.includes('krippe') || urlLower.includes('krippe')) {
            return "Krippen-Informationen";
        } else if (titleLower.includes('sozial') || urlLower.includes('sozial')) {
            return "Sozialleistungen";
        } else if (titleLower.includes('amt') || urlLower.includes('amt')) {
            return "Amt-Informationen";
        } else if (titleLower.includes('verwaltung') || urlLower.includes('verwaltung')) {
            return "Verwaltungsservices";
        } else if (titleLower.includes('familie') || urlLower.includes('familie')) {
            return "Familien-Services";
        } else if (titleLower.includes('wirtschaft') || urlLower.includes('wirtschaft')) {
            return "Wirtschaftliche Hilfe";
        } else if (titleLower.includes('eile') || urlLower.includes('eile')) {
            return "Eilhabe-Services";
        } else if (titleLower.includes('sicherung') || urlLower.includes('sicherung')) {
            return "Soziale Sicherung";
        } else if (titleLower.includes('tagespflege') || urlLower.includes('tagespflege')) {
            return "Tagespflege-Informationen";
        } else if (titleLower.includes('luette') || urlLower.includes('luette')) {
            return "Krippe L√ºttje L√º";
        } else if (titleLower.includes('kurzvorstellung') || urlLower.includes('kurzvorstellung')) {
            return "Amt-√úbersicht";
        } else if (titleLower.includes('landkreis') && titleLower.includes('verwaltung')) {
            return "Landkreis-Verwaltung";
        } else if (titleLower.includes('antragsarten') || urlLower.includes('antragsarten')) {
            return "Antragsarten und Unterlagen";
        } else if (titleLower.includes('favoriten') || urlLower.includes('favoriten')) {
            return "Favoriten-√úbersicht";
        } else if (titleLower.includes('eichenprozessionsspinner') || urlLower.includes('eichenprozessionsspinner')) {
            return "Eichenprozessionsspinner-Info";
        } else if (titleLower.includes('landkreis')) {
            return "Landkreis-Services";
        } else {
            // Fallback: Erste paar W√∂rter des Titels verwenden
            const words = title.split(' ').slice(0, 3);
            return words.join(' ');
        }
    }
    
    extractLinks(data) {
        const links = [];
        data.forEach(item => {
            if (item.url) {
                links.push({
                    title: item.title,
                    url: item.url
                });
            }
        });
        return links;
    }

    // ERWEITERTE LANDKREIS-SPEZIFISCHE RESPONSE-FUNKTIONEN

    generateLandwirtschaftResponse(intention, tone) {
        const location = intention.location ? ` in ${intention.location}` : '';
        const urgency = intention.urgency === 'high' ? ' Ich verstehe, dass es eilig ist.' : '';
        
        return {
            response: `Moin! Perfekt - ich helfe dir sofort bei deinen landwirtschaftlichen Anliegen${location}.${urgency}

**üéØ Hier ist dein direkter Weg:**

**1. üìã EU-Antr√§ge:**
   ‚Üí [EU-Antr√§ge Landwirtschaft](https://www.oldenburg-kreis.de/wirtschaft/landwirtschaft/eu-antraege/)

**2. üìÑ Tierhaltung:**
   ‚Üí [Tierhaltung Genehmigungen](https://www.oldenburg-kreis.de/wirtschaft/landwirtschaft/tierhaltung/)

**3. üìû Agrarberatung:**
   ‚Üí **04431 85-0** (Mo-Fr 8-16 Uhr)

**üéØ Deine n√§chste Aktion:** Klick auf den EU-Antrag-Link oder ruf direkt an!

**Brauchst du Hilfe bei den Unterlagen? Sag mir, was du schon hast!**`,
            links: [
                { title: 'EU-Antr√§ge Landwirtschaft', url: 'https://www.oldenburg-kreis.de/wirtschaft/landwirtschaft/eu-antraege/' },
                { title: 'Tierhaltung Genehmigungen', url: 'https://www.oldenburg-kreis.de/wirtschaft/landwirtschaft/tierhaltung/' }
            ]
        };
    }

    generateTierhaltungResponse(intention, tone) {
        const location = intention.location ? ` in ${intention.location}` : '';
        const urgency = intention.urgency === 'high' ? ' Ich verstehe, dass es eilig ist.' : '';
        
        return {
            response: `Moin! Perfekt - ich helfe dir sofort bei deinen Tierhaltungs-Anliegen${location}.${urgency}

**üéØ Hier ist dein direkter Weg:**

**1. üìã Genehmigungen:**
   ‚Üí [Tierhaltung Genehmigungen](https://www.oldenburg-kreis.de/wirtschaft/landwirtschaft/tierhaltung/)

**2. üìÑ Tierschutz:**
   ‚Üí [Tierschutz Bestimmungen](https://www.oldenburg-kreis.de/wirtschaft/landwirtschaft/tierschutz/)

**3. üìû Veterin√§r:**
   ‚Üí **04431 85-0** (Mo-Fr 8-16 Uhr)

**üéØ Deine n√§chste Aktion:** Klick auf den Genehmigung-Link oder ruf direkt an!

**Brauchst du Hilfe bei den Unterlagen? Sag mir, was du schon hast!**`,
            links: [
                { title: 'Tierhaltung Genehmigungen', url: 'https://www.oldenburg-kreis.de/wirtschaft/landwirtschaft/tierhaltung/' },
                { title: 'Tierschutz Bestimmungen', url: 'https://www.oldenburg-kreis.de/wirtschaft/landwirtschaft/tierschutz/' }
            ]
        };
    }

    generateHandwerkResponse(intention, tone) {
        const location = intention.location ? ` in ${intention.location}` : '';
        const urgency = intention.urgency === 'high' ? ' Ich verstehe, dass es eilig ist.' : '';
        
        return {
            response: `Moin! Perfekt - ich helfe dir sofort bei deinen handwerklichen Anliegen${location}.${urgency}

**üéØ Hier ist dein direkter Weg:**

**1. üìã Meisterpr√ºfung:**
   ‚Üí [Meisterpr√ºfung Handwerk](https://www.oldenburg-kreis.de/wirtschaft/handwerk/meisterpruefung/)

**2. üìÑ Handwerkskammer:**
   ‚Üí [Handwerkskammer Kontakt](https://www.oldenburg-kreis.de/wirtschaft/handwerk/handwerkskammer/)

**3. üìû Ausbildung:**
   ‚Üí **04431 85-0** (Mo-Fr 8-16 Uhr)

**üéØ Deine n√§chste Aktion:** Klick auf den Meisterpr√ºfung-Link oder ruf direkt an!

**Brauchst du Hilfe bei den Unterlagen? Sag mir, was du schon hast!**`,
            links: [
                { title: 'Meisterpr√ºfung Handwerk', url: 'https://www.oldenburg-kreis.de/wirtschaft/handwerk/meisterpruefung/' },
                { title: 'Handwerkskammer Kontakt', url: 'https://www.oldenburg-kreis.de/wirtschaft/handwerk/handwerkskammer/' }
            ]
        };
    }

    generateAusbildungResponse(intention, tone) {
        const location = intention.location ? ` in ${intention.location}` : '';
        const urgency = intention.urgency === 'high' ? ' Ich verstehe, dass es eilig ist.' : '';
        
        return {
            response: `Moin! Perfekt - ich helfe dir sofort bei deinen Ausbildungs-Anliegen${location}.${urgency}

**üéØ Hier ist dein direkter Weg:**

**1. üìã Ausbildungsplatz:**
   ‚Üí [Ausbildungspl√§tze finden](https://www.oldenburg-kreis.de/bildung/ausbildung/)

**2. üìÑ Berufsschule:**
   ‚Üí [Berufsschule Kontakt](https://www.oldenburg-kreis.de/bildung/berufsschule/)

**3. üìû Pr√ºfung:**
   ‚Üí **04431 85-0** (Mo-Fr 8-16 Uhr)

**üéØ Deine n√§chste Aktion:** Klick auf den Ausbildungsplatz-Link oder ruf direkt an!

**Brauchst du Hilfe bei den Unterlagen? Sag mir, was du schon hast!**`,
            links: [
                { title: 'Ausbildungspl√§tze finden', url: 'https://www.oldenburg-kreis.de/bildung/ausbildung/' },
                { title: 'Berufsschule Kontakt', url: 'https://www.oldenburg-kreis.de/bildung/berufsschule/' }
            ]
        };
    }

    generateStudiumResponse(intention, tone) {
        const location = intention.location ? ` in ${intention.location}` : '';
        const urgency = intention.urgency === 'high' ? ' Ich verstehe, dass es eilig ist.' : '';
        
        return {
            response: `Moin! Perfekt - ich helfe dir sofort bei deinen Studien-Anliegen${location}.${urgency}

**üéØ Hier ist dein direkter Weg:**

**1. üìã BAf√∂G-Antrag:**
   ‚Üí [BAf√∂G-Antrag online](https://www.oldenburg-kreis.de/bildung/bafoeg/)

**2. üìÑ Wohnheim:**
   ‚Üí [Wohnheimplatz beantragen](https://www.oldenburg-kreis.de/bildung/wohnheim/)

**3. üìû Studienberatung:**
   ‚Üí **04431 85-0** (Mo-Fr 8-16 Uhr)

**üéØ Deine n√§chste Aktion:** Klick auf den BAf√∂G-Link oder ruf direkt an!

**Brauchst du Hilfe bei den Unterlagen? Sag mir, was du schon hast!**`,
            links: [
                { title: 'BAf√∂G-Antrag online', url: 'https://www.oldenburg-kreis.de/bildung/bafoeg/' },
                { title: 'Wohnheimplatz beantragen', url: 'https://www.oldenburg-kreis.de/bildung/wohnheim/' }
            ]
        };
    }

    generateBaf√∂gResponse(intention, tone) {
        const location = intention.location ? ` in ${intention.location}` : '';
        const urgency = intention.urgency === 'high' ? ' Ich verstehe, dass es eilig ist.' : '';
        
        return {
            response: `Moin! Perfekt - ich helfe dir sofort bei deinen BAf√∂G-Anliegen${location}.${urgency}

**üéØ Hier ist dein direkter Weg:**

**1. üìã BAf√∂G-Antrag:**
   ‚Üí [BAf√∂G-Antrag online](https://www.oldenburg-kreis.de/bildung/bafoeg/)

**2. üìÑ Unterlagen:**
   ‚Üí [BAf√∂G-Unterlagen](https://www.oldenburg-kreis.de/bildung/bafoeg/unterlagen/)

**3. üìû Beratung:**
   ‚Üí **04431 85-0** (Mo-Fr 8-16 Uhr)

**üéØ Deine n√§chste Aktion:** Klick auf den BAf√∂G-Link oder ruf direkt an!

**Brauchst du Hilfe bei den Unterlagen? Sag mir, was du schon hast!**`,
            links: [
                { title: 'BAf√∂G-Antrag online', url: 'https://www.oldenburg-kreis.de/bildung/bafoeg/' },
                { title: 'BAf√∂G-Unterlagen', url: 'https://www.oldenburg-kreis.de/bildung/bafoeg/unterlagen/' }
            ]
        };
    }

    generateArbeitslosigkeitResponse(intention, tone) {
        const location = intention.location ? ` in ${intention.location}` : '';
        const urgency = intention.urgency === 'high' ? ' Ich verstehe, dass es eilig ist.' : '';
        
        return {
            response: `Moin! Perfekt - ich helfe dir sofort bei deinen Arbeitslosigkeits-Anliegen${location}.${urgency}

**üéØ Hier ist dein direkter Weg:**

**1. üìã ALG-Antrag:**
   ‚Üí [ALG-Antrag online](https://www.oldenburg-kreis.de/soziales/alg/)

**2. üìÑ Jobcenter:**
   ‚Üí [Jobcenter Kontakt](https://www.oldenburg-kreis.de/soziales/jobcenter/)

**3. üìû Weiterbildung:**
   ‚Üí **04431 85-0** (Mo-Fr 8-16 Uhr)

**üéØ Deine n√§chste Aktion:** Klick auf den ALG-Link oder ruf direkt an!

**Brauchst du Hilfe bei den Unterlagen? Sag mir, was du schon hast!**`,
            links: [
                { title: 'ALG-Antrag online', url: 'https://www.oldenburg-kreis.de/soziales/alg/' },
                { title: 'Jobcenter Kontakt', url: 'https://www.oldenburg-kreis.de/soziales/jobcenter/' }
            ]
        };
    }

    generateRenteResponse(intention, tone) {
        const location = intention.location ? ` in ${intention.location}` : '';
        const urgency = intention.urgency === 'high' ? ' Ich verstehe, dass es eilig ist.' : '';
        
        return {
            response: `Moin! Perfekt - ich helfe dir sofort bei deinen Renten-Anliegen${location}.${urgency}

**üéØ Hier ist dein direkter Weg:**

**1. üìã Rentenantrag:**
   ‚Üí [Rentenantrag online](https://www.oldenburg-kreis.de/soziales/rente/)

**2. üìÑ Pension:**
   ‚Üí [Pension Informationen](https://www.oldenburg-kreis.de/soziales/pension/)

**3. üìû Seniorenservices:**
   ‚Üí **04431 85-0** (Mo-Fr 8-16 Uhr)

**üéØ Deine n√§chste Aktion:** Klick auf den Rentenantrag-Link oder ruf direkt an!

**Brauchst du Hilfe bei den Unterlagen? Sag mir, was du schon hast!**`,
            links: [
                { title: 'Rentenantrag online', url: 'https://www.oldenburg-kreis.de/soziales/rente/' },
                { title: 'Pension Informationen', url: 'https://www.oldenburg-kreis.de/soziales/pension/' }
            ]
        };
    }

    generateSeniorenResponse(intention, tone) {
        const location = intention.location ? ` in ${intention.location}` : '';
        const urgency = intention.urgency === 'high' ? ' Ich verstehe, dass es eilig ist.' : '';
        
        return {
            response: `Moin! Perfekt - ich helfe Ihnen sofort bei Ihren Senioren-Anliegen${location}.${urgency}

**üéØ Hier ist Ihr direkter Weg:**

**1. üìã Seniorenservices:**
   ‚Üí [Seniorenservices](https://www.oldenburg-kreis.de/soziales/senioren/)

**2. üìÑ Pflege:**
   ‚Üí [Pflege Informationen](https://www.oldenburg-kreis.de/soziales/pflege/)

**3. üìû Betreuung:**
   ‚Üí **04431 85-0** (Mo-Fr 8-16 Uhr)

**üéØ Ihre n√§chste Aktion:** Klick auf den Seniorenservices-Link oder ruf direkt an!

**Brauchen Sie Hilfe bei den Unterlagen? Sagen Sie mir, was Sie schon haben!**`,
            links: [
                { title: 'Seniorenservices', url: 'https://www.oldenburg-kreis.de/soziales/senioren/' },
                { title: 'Pflege Informationen', url: 'https://www.oldenburg-kreis.de/soziales/pflege/' }
            ]
        };
    }

    generateAlleinerziehendeResponse(intention, tone) {
        const location = intention.location ? ` in ${intention.location}` : '';
        const urgency = intention.urgency === 'high' ? ' Ich verstehe, dass es eilig ist.' : '';
        
        return {
            response: `Moin! Perfekt - ich helfe dir sofort bei deinen Alleinerziehenden-Anliegen${location}.${urgency}

**üéØ Hier ist dein direkter Weg:**

**1. üìã Kindergeld-Antrag:**
   ‚Üí [Kindergeld-Antrag online](https://www.oldenburg-kreis.de/soziales/kindergeld/)

**2. üìÑ Unterhaltsvorschuss:**
   ‚Üí [Unterhaltsvorschuss](https://www.oldenburg-kreis.de/soziales/unterhalt/)

**3. üìû Betreuung:**
   ‚Üí **04431 85-0** (Mo-Fr 8-16 Uhr)

**üéØ Deine n√§chste Aktion:** Klick auf den Kindergeld-Link oder ruf direkt an!

**Brauchst du Hilfe bei den Unterlagen? Sag mir, was du schon hast!**`,
            links: [
                { title: 'Kindergeld-Antrag online', url: 'https://www.oldenburg-kreis.de/soziales/kindergeld/' },
                { title: 'Unterhaltsvorschuss', url: 'https://www.oldenburg-kreis.de/soziales/unterhalt/' }
            ]
        };
    }

    generateUnterhaltResponse(intention, tone) {
        const location = intention.location ? ` in ${intention.location}` : '';
        const urgency = intention.urgency === 'high' ? ' Ich verstehe, dass es eilig ist.' : '';
        
        return {
            response: `Moin! Perfekt - ich helfe dir sofort bei deinen Unterhalts-Anliegen${location}.${urgency}

**üéØ Hier ist dein direkter Weg:**

**1. üìã Unterhaltsvorschuss:**
   ‚Üí [Unterhaltsvorschuss](https://www.oldenburg-kreis.de/soziales/unterhalt/)

**2. üìÑ Antrag:**
   ‚Üí [Unterhalt-Antrag](https://www.oldenburg-kreis.de/soziales/unterhalt/antrag/)

**3. üìû Beratung:**
   ‚Üí **04431 85-0** (Mo-Fr 8-16 Uhr)

**üéØ Deine n√§chste Aktion:** Klick auf den Unterhaltsvorschuss-Link oder ruf direkt an!

**Brauchst du Hilfe bei den Unterlagen? Sag mir, was du schon hast!**`,
            links: [
                { title: 'Unterhaltsvorschuss', url: 'https://www.oldenburg-kreis.de/soziales/unterhalt/' },
                { title: 'Unterhalt-Antrag', url: 'https://www.oldenburg-kreis.de/soziales/unterhalt/antrag/' }
            ]
        };
    }

    generateBehinderungResponse(intention, tone) {
        const location = intention.location ? ` in ${intention.location}` : '';
        const urgency = intention.urgency === 'high' ? ' Ich verstehe, dass es eilig ist.' : '';
        
        return {
            response: `Moin! Perfekt - ich helfe dir sofort bei deinen Behinderungs-Anliegen${location}.${urgency}

**üéØ Hier ist dein direkter Weg:**

**1. üìã Schwerbehindertenausweis:**
   ‚Üí [Schwerbehindertenausweis](https://www.oldenburg-kreis.de/soziales/behinderung/)

**2. üìÑ Eingliederungshilfe:**
   ‚Üí [Eingliederungshilfe](https://www.oldenburg-kreis.de/soziales/eingliederungshilfe/)

**3. üìû Barrierefreiheit:**
   ‚Üí **04431 85-0** (Mo-Fr 8-16 Uhr)

**üéØ Deine n√§chste Aktion:** Klick auf den Schwerbehindertenausweis-Link oder ruf direkt an!

**Brauchst du Hilfe bei den Unterlagen? Sag mir, was du schon hast!**`,
            links: [
                { title: 'Schwerbehindertenausweis', url: 'https://www.oldenburg-kreis.de/soziales/behinderung/' },
                { title: 'Eingliederungshilfe', url: 'https://www.oldenburg-kreis.de/soziales/eingliederungshilfe/' }
            ]
        };
    }

    generateMigrationResponse(intention, tone) {
        const location = intention.location ? ` in ${intention.location}` : '';
        const urgency = intention.urgency === 'high' ? ' Ich verstehe, dass es eilig ist.' : '';
        
        return {
            response: `Moin! Perfekt - ich helfe dir sofort bei deinen Migrations-Anliegen${location}.${urgency}

**üéØ Hier ist dein direkter Weg:**

**1. üìã Asylverfahren:**
   ‚Üí [Asylverfahren](https://www.oldenburg-kreis.de/soziales/asyl/)

**2. üìÑ Sprachkurs:**
   ‚Üí [Sprachkurs](https://www.oldenburg-kreis.de/soziales/integration/)

**3. üìû Integration:**
   ‚Üí **04431 85-0** (Mo-Fr 8-16 Uhr)

**üéØ Deine n√§chste Aktion:** Klick auf den Asylverfahren-Link oder ruf direkt an!

**Brauchst du Hilfe bei den Unterlagen? Sag mir, was du schon hast!**`,
            links: [
                { title: 'Asylverfahren', url: 'https://www.oldenburg-kreis.de/soziales/asyl/' },
                { title: 'Sprachkurs', url: 'https://www.oldenburg-kreis.de/soziales/integration/' }
            ]
        };
    }

    generateAufenthaltsrechtResponse(intention, tone) {
        const location = intention.location ? ` in ${intention.location}` : '';
        const urgency = intention.urgency === 'high' ? ' Ich verstehe, dass es eilig ist.' : '';
        
        return {
            response: `Moin! Perfekt - ich helfe dir sofort bei deinen Aufenthaltsrecht-Anliegen${location}.${urgency}

**üéØ Hier ist dein direkter Weg:**

**1. üìã Aufenthaltsrecht:**
   ‚Üí [Aufenthaltsrecht](https://www.oldenburg-kreis.de/soziales/aufenthaltsrecht/)

**2. üìÑ Arbeitserlaubnis:**
   ‚Üí [Arbeitserlaubnis](https://www.oldenburg-kreis.de/soziales/arbeitserlaubnis/)

**3. üìû Familiennachzug:**
   ‚Üí **04431 85-0** (Mo-Fr 8-16 Uhr)

**üéØ Deine n√§chste Aktion:** Klick auf den Aufenthaltsrecht-Link oder ruf direkt an!

**Brauchst du Hilfe bei den Unterlagen? Sag mir, was du schon hast!**`,
            links: [
                { title: 'Aufenthaltsrecht', url: 'https://www.oldenburg-kreis.de/soziales/aufenthaltsrecht/' },
                { title: 'Arbeitserlaubnis', url: 'https://www.oldenburg-kreis.de/soziales/arbeitserlaubnis/' }
            ]
        };
    }

    generateEUB√ºrgerResponse(intention, tone) {
        const location = intention.location ? ` in ${intention.location}` : '';
        const urgency = intention.urgency === 'high' ? ' Ich verstehe, dass es eilig ist.' : '';
        
        return {
            response: `Moin! Perfekt - ich helfe dir sofort bei deinen EU-B√ºrger-Anliegen${location}.${urgency}

**üéØ Hier ist dein direkter Weg:**

**1. üìã Aufenthaltsrecht:**
   ‚Üí [EU-Aufenthaltsrecht](https://www.oldenburg-kreis.de/soziales/eu-aufenthaltsrecht/)

**2. üìÑ Arbeitserlaubnis:**
   ‚Üí [EU-Arbeitserlaubnis](https://www.oldenburg-kreis.de/soziales/eu-arbeitserlaubnis/)

**3. üìû Familiennachzug:**
   ‚Üí **04431 85-0** (Mo-Fr 8-16 Uhr)

**üéØ Deine n√§chste Aktion:** Klick auf den EU-Aufenthaltsrecht-Link oder ruf direkt an!

**Brauchst du Hilfe bei den Unterlagen? Sag mir, was du schon hast!**`,
            links: [
                { title: 'EU-Aufenthaltsrecht', url: 'https://www.oldenburg-kreis.de/soziales/eu-aufenthaltsrecht/' },
                { title: 'EU-Arbeitserlaubnis', url: 'https://www.oldenburg-kreis.de/soziales/eu-arbeitserlaubnis/' }
            ]
        };
    }

    generateKleinunternehmerResponse(intention, tone) {
        const location = intention.location ? ` in ${intention.location}` : '';
        const urgency = intention.urgency === 'high' ? ' Ich verstehe, dass es eilig ist.' : '';
        
        return {
            response: `Moin! Perfekt - ich helfe dir sofort bei deinen Kleinunternehmer-Anliegen${location}.${urgency}

**üéØ Hier ist dein direkter Weg:**

**1. üìã Kleinunternehmerregelung:**
   ‚Üí [Kleinunternehmerregelung](https://www.oldenburg-kreis.de/wirtschaft/kleinunternehmer/)

**2. üìÑ Gewerbesteuer:**
   ‚Üí [Gewerbesteuer](https://www.oldenburg-kreis.de/wirtschaft/gewerbesteuer/)

**3. üìû Buchhaltung:**
   ‚Üí **04431 85-0** (Mo-Fr 8-16 Uhr)

**üéØ Deine n√§chste Aktion:** Klick auf den Kleinunternehmerregelung-Link oder ruf direkt an!

**Brauchst du Hilfe bei den Unterlagen? Sag mir, was du schon hast!**`,
            links: [
                { title: 'Kleinunternehmerregelung', url: 'https://www.oldenburg-kreis.de/wirtschaft/kleinunternehmer/' },
                { title: 'Gewerbesteuer', url: 'https://www.oldenburg-kreis.de/wirtschaft/gewerbesteuer/' }
            ]
        };
    }

    generateSteuernResponse(intention, tone) {
        const location = intention.location ? ` in ${intention.location}` : '';
        const urgency = intention.urgency === 'high' ? ' Ich verstehe, dass es eilig ist.' : '';
        
        return {
            response: `Moin! Perfekt - ich helfe dir sofort bei deinen Steuer-Anliegen${location}.${urgency}

**üéØ Hier ist dein direkter Weg:**

**1. üìã Steuerberatung:**
   ‚Üí [Steuerberatung](https://www.oldenburg-kreis.de/wirtschaft/steuerberatung/)

**2. üìÑ Buchhaltung:**
   ‚Üí [Buchhaltung](https://www.oldenburg-kreis.de/wirtschaft/buchhaltung/)

**3. üìû Gewerbesteuer:**
   ‚Üí **04431 85-0** (Mo-Fr 8-16 Uhr)

**üéØ Deine n√§chste Aktion:** Klick auf den Steuerberatung-Link oder ruf direkt an!

**Brauchst du Hilfe bei den Unterlagen? Sag mir, was du schon hast!**`,
            links: [
                { title: 'Steuerberatung', url: 'https://www.oldenburg-kreis.de/wirtschaft/steuerberatung/' },
                { title: 'Buchhaltung', url: 'https://www.oldenburg-kreis.de/wirtschaft/buchhaltung/' }
            ]
        };
    }
}

module.exports = KAYACharacterHandler;